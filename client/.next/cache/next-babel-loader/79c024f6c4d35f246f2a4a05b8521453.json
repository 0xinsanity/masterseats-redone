{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, createContext } from \"react\";\nimport { DefaultApi } from '../../api';\nexport const UserContext = /*#__PURE__*/createContext({\n  currentToken: null,\n  currentUser: null\n});\n\nclass UserProvider extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"addToken\", token => {\n      console.log('This is current: ' + token);\n      this.setState({\n        currentToken: token\n      });\n    });\n\n    _defineProperty(this, \"state\", {\n      loading: false,\n      currentToken: null,\n      currentUser: null,\n      addToken: this.addToken\n    });\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      if (this.state.currentUser !== null) {\n        try {\n          const body = await new DefaultApi().login({\n            email: this.state.currentUser.email,\n            password: this.state.currentUser.password\n          });\n          this.addToken(body.data);\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(UserContext.Provider, {\n      value: this.state\n    }, /*#__PURE__*/React.createElement(Loading, {\n      loading: this.state.loading\n    }), this.props.children);\n  }\n\n}\n\nexport default UserProvider;","map":{"version":3,"sources":["/Users/insanity/Documents/MasterSeats/new/client/src/lib/UserContext.tsx"],"names":["React","Component","createContext","DefaultApi","UserContext","currentToken","currentUser","UserProvider","token","console","log","setState","loading","addToken","state","body","login","email","password","data","err","error","render","props","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,OAAhD;AAIA,SAAcC,UAAd,QAA+B,WAA/B;AAOA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,CAAwB;AAC5DG,EAAAA,YAAY,EAAE,IAD8C;AAE5DC,EAAAA,WAAW,EAAE;AAF+C,CAAxB,CAAjC;;AAIP,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAAA;AAAA;;AAAA,sCACrBO,KAAD,IAAmB;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBF,KAAlC;AACA,WAAKG,QAAL,CAAc;AAACN,QAAAA,YAAY,EAAEG;AAAf,OAAd;AACH,KAJgC;;AAAA,mCAMzB;AACJI,MAAAA,OAAO,EAAE,KADL;AAEJP,MAAAA,YAAY,EAAE,IAFV;AAGJC,MAAAA,WAAW,EAAE,IAHT;AAIJO,MAAAA,QAAQ,EAAE,KAAKA;AAJX,KANyB;;AAAA,+CAab,YAAY;AAC5B,UAAI,KAAKC,KAAL,CAAWR,WAAX,KAA2B,IAA/B,EAAqC;AACjC,YAAI;AACA,gBAAMS,IAAI,GAAG,MAAM,IAAIZ,UAAJ,GAAiBa,KAAjB,CAAuB;AAACC,YAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWR,WAAX,CAAuBW,KAA/B;AAAsCC,YAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWR,WAAX,CAAuBY;AAAvE,WAAvB,CAAnB;AACA,eAAKL,QAAL,CAAcE,IAAI,CAACI,IAAnB;AACH,SAHD,CAGE,OAAOC,GAAP,EAAY;AACVX,UAAAA,OAAO,CAACY,KAAR,CAAcD,GAAd;AACH;AACJ;AACJ,KAtBgC;AAAA;;AAwBjCE,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,KAAKR;AAAlC,oBACI,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWF;AAA7B,MADJ,EAEK,KAAKW,KAAL,CAAWC,QAFhB,CADJ;AAMH;;AA/BgC;;AAiCrC,eAAejB,YAAf","sourcesContent":["import React, { Component, createContext } from \"react\";\nimport Router, {withRouter} from \"next/router\";\nimport {message} from 'antd'\nimport { NextPage, NextPageContext } from 'next';\nimport {User, DefaultApi} from '../../api'\n\ninterface ContextProps {\n  currentToken?: string,\n  currentUser?: User\n}\n\nexport const UserContext = createContext<Partial<ContextProps>>({\n    currentToken: null,\n    currentUser: null\n});\nclass UserProvider extends Component {\n    addToken = (token: string) => {\n        console.log('This is current: ' + token)\n        this.setState({currentToken: token})\n    }\n\n    state = {\n        loading: false,\n        currentToken: null,\n        currentUser: null,\n        addToken: this.addToken\n    }\n\n    componentDidMount = async () => {\n        if (this.state.currentUser !== null) {\n            try {\n                const body = await new DefaultApi().login({email: this.state.currentUser.email, password: this.state.currentUser.password})\n                this.addToken(body.data)\n            } catch (err) {\n                console.error(err)\n            }\n        }\n    }\n\n    render() {\n        return (\n            <UserContext.Provider value={this.state}>\n                <Loading loading={this.state.loading}/>\n                {this.props.children}\n            </UserContext.Provider>\n        );\n    }\n}\nexport default UserProvider;"]},"metadata":{},"sourceType":"module"}