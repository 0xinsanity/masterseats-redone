{"ast":null,"code":"import React, { useContext } from 'react';\nimport { PageDashboard } from '../PageUniversal';\nimport ResetPasswordComponent from '../LoginCard/ResetPasswordComponent';\nimport { UserContext } from '../../lib/UserContext';\nimport { message, Button } from 'antd';\nimport OpenPage from '../../areas/OpenPage';\n\nconst Profile = () => {\n  const {\n    api\n  } = useContext(UserContext);\n\n  const resetPassword = async body_change => {\n    if (body_change.new_password !== body_change.repeat_password) {\n      message.error(\"Your new password is not the same as your repeated password.\");\n      return;\n    }\n\n    try {\n      await api.changePasswordFromProfile({\n        new_password: body_change.new_password\n      });\n      message.success(\"Your password has been changed. Please login with your new password.\");\n    } catch (err) {\n      message.error(\"There was a problem verifying your account. Please contact us.\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(PageDashboard, null, /*#__PURE__*/React.createElement(ResetPasswordComponent, {\n    onFinish: resetPassword\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      localStorage.setItem('email', '');\n      localStorage.setItem('password', '');\n      OpenPage('/');\n    }\n  }, \"Log out\"));\n};\n\nexport default Profile;","map":{"version":3,"sources":["/Users/insanity/Documents/MasterSeats/new/client/src/areas/Profile/index.tsx"],"names":["React","useContext","PageDashboard","ResetPasswordComponent","UserContext","message","Button","OpenPage","Profile","api","resetPassword","body_change","new_password","repeat_password","error","changePasswordFromProfile","success","err","localStorage","setItem"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,OAAOC,sBAAP,MAAmC,qCAAnC;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,SAAQC,OAAR,EAAiBC,MAAjB,QAA8B,MAA9B;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,OAAiB,GAAG,MAAM;AAC5B,QAAM;AAACC,IAAAA;AAAD,MAAQR,UAAU,CAACG,WAAD,CAAxB;;AAEA,QAAMM,aAAa,GAAG,MAAOC,WAAP,IAAuB;AACzC,QAAIA,WAAW,CAACC,YAAZ,KAA6BD,WAAW,CAACE,eAA7C,EAA8D;AAC1DR,MAAAA,OAAO,CAACS,KAAR,CAAc,8DAAd;AACA;AACH;;AAED,QAAI;AACA,YAAML,GAAG,CAACM,yBAAJ,CAA8B;AAACH,QAAAA,YAAY,EAAED,WAAW,CAACC;AAA3B,OAA9B,CAAN;AACAP,MAAAA,OAAO,CAACW,OAAR,CAAgB,sEAAhB;AACH,KAHD,CAGE,OAAOC,GAAP,EAAY;AACVZ,MAAAA,OAAO,CAACS,KAAR,CAAc,gEAAd;AACH;AACJ,GAZD;;AAcA,sBACI,oBAAC,aAAD,qBACI,oBAAC,sBAAD;AAAwB,IAAA,QAAQ,EAAEJ;AAAlC,IADJ,eAEI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAM;AACnBQ,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,EAA9B;AACAD,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,EAAjC;AACAZ,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACH;AAJD,eAFJ,CADJ;AAUH,CA3BD;;AA6BA,eAAeC,OAAf","sourcesContent":["import React, {useContext} from 'react'\nimport {PageDashboard} from '../PageUniversal'\nimport ResetPasswordComponent from '../LoginCard/ResetPasswordComponent'\nimport {UserContext} from '../../lib/UserContext'\nimport {message, Button} from 'antd'\nimport OpenPage from '../../areas/OpenPage'\n\nconst Profile: React.FC = () => {\n    const {api} = useContext(UserContext)\n    \n    const resetPassword = async (body_change) => {\n        if (body_change.new_password !== body_change.repeat_password) {\n            message.error(\"Your new password is not the same as your repeated password.\")\n            return\n        }\n\n        try {\n            await api.changePasswordFromProfile({new_password: body_change.new_password})\n            message.success(\"Your password has been changed. Please login with your new password.\")\n        } catch (err) {\n            message.error(\"There was a problem verifying your account. Please contact us.\")\n        }\n    }\n\n    return (\n        <PageDashboard>\n            <ResetPasswordComponent onFinish={resetPassword}/>\n            <Button onClick={() => {\n                localStorage.setItem('email', '')\n                localStorage.setItem('password', '')\n                OpenPage('/')\n            }}>Log out</Button>\n        </PageDashboard>\n    )\n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}