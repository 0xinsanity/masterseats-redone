{"ast":null,"code":"import React, { useContext } from 'react';\nimport { message } from 'antd';\nimport Head from 'next/head';\nimport LoginCard from '../src/areas/LoginCard';\nimport LoginBackground from '../src/components/LoginBackground';\nimport OpenPage from '../src/areas/Universal/OpenPage';\nimport { UserContext } from '../src/lib/UserContext';\n\nconst Login = () => {\n  const {\n    setToken,\n    api,\n    currentUser\n  } = useContext(UserContext);\n\n  const onFinish = async ({\n    uniq_id,\n    password\n  }) => {\n    try {\n      const email = uniq_id;\n      const res = await api.login({\n        email,\n        password\n      });\n      localStorage.setItem('email', email);\n      localStorage.setItem('password', password);\n      await setToken(res.data).then(() => {\n        setTimeout(() => {\n          message.success(\"Welcome, \" + currentUser.first_name + \"!\");\n        }, 1000);\n      });\n      OpenPage('/dashboard');\n    } catch (error) {\n      console.log(error);\n\n      if (error.response.status === 410) {\n        message.info(\"Please remember to verify your email before trying to login.\");\n      } else {\n        message.error(\"Your email and/or password were incorrect. Please try again.\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Head, null, /*#__PURE__*/React.createElement(\"title\", null, \"MasterSeats \\u2022 Login\")), /*#__PURE__*/React.createElement(LoginBackground, null, /*#__PURE__*/React.createElement(LoginCard, {\n    title: \"Login\",\n    onFinish: onFinish\n  })));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/insanity/Documents/MasterSeats/new/client/pages/login.tsx"],"names":["React","useContext","message","Head","LoginCard","LoginBackground","OpenPage","UserContext","Login","setToken","api","currentUser","onFinish","uniq_id","password","email","res","login","localStorage","setItem","data","then","setTimeout","success","first_name","error","console","log","response","status","info"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,MAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,SAAQC,WAAR,QAA0B,wBAA1B;;AAEA,MAAMC,KAAe,GAAG,MAAM;AAC1B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,GAAZ;AAAiBC,IAAAA;AAAjB,MAAiCV,UAAU,CAACM,WAAD,CAAjD;;AACA,QAAMK,QAAQ,GAAG,OAAO;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAP,KAA+B;AAC5C,QAAI;AACA,YAAMC,KAAK,GAAGF,OAAd;AACA,YAAMG,GAAG,GAAG,MAAMN,GAAG,CAACO,KAAJ,CAAU;AAACF,QAAAA,KAAD;AAAQD,QAAAA;AAAR,OAAV,CAAlB;AACAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,KAA9B;AACAG,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCL,QAAjC;AACA,YAAML,QAAQ,CAACO,GAAG,CAACI,IAAL,CAAR,CAAmBC,IAAnB,CAAwB,MAAM;AAChCC,QAAAA,UAAU,CAAC,MAAM;AACbpB,UAAAA,OAAO,CAACqB,OAAR,CAAgB,cAAcZ,WAAW,CAACa,UAA1B,GAAuC,GAAvD;AACH,SAFS,EAEP,IAFO,CAAV;AAGH,OAJK,CAAN;AAKAlB,MAAAA,QAAQ,CAAC,YAAD,CAAR;AACH,KAXD,CAWE,OAAOmB,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,UAAIA,KAAK,CAACG,QAAN,CAAeC,MAAf,KAA0B,GAA9B,EAAmC;AAC/B3B,QAAAA,OAAO,CAAC4B,IAAR,CAAa,8DAAb;AACH,OAFD,MAEO;AACH5B,QAAAA,OAAO,CAACuB,KAAR,CAAc,8DAAd;AACH;AACJ;AACJ,GApBD;;AAsBA,sBACI,uDACI,oBAAC,IAAD,qBACI,8DADJ,CADJ,eAII,oBAAC,eAAD,qBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE,OAAlB;AAA2B,IAAA,QAAQ,EAAEb;AAArC,IADJ,CAJJ,CADJ;AAUH,CAlCD;;AAoCA,eAAeJ,KAAf","sourcesContent":["import React, {useContext } from 'react'\nimport {message} from 'antd'\nimport Head from 'next/head'\nimport LoginCard from '../src/areas/LoginCard'\nimport LoginBackground from '../src/components/LoginBackground'\nimport OpenPage from '../src/areas/Universal/OpenPage'\nimport {UserContext} from '../src/lib/UserContext'\n\nconst Login: React.FC = () => {\n    const { setToken, api, currentUser } = useContext(UserContext)\n    const onFinish = async ({uniq_id, password}) => {\n        try {\n            const email = uniq_id\n            const res = await api.login({email, password})\n            localStorage.setItem('email', email)\n            localStorage.setItem('password', password)\n            await setToken(res.data).then(() => {\n                setTimeout(() => {\n                    message.success(\"Welcome, \" + currentUser.first_name + \"!\")\n                }, 1000)\n            })\n            OpenPage('/dashboard')\n        } catch (error) {\n            console.log(error)\n            if (error.response.status === 410) {\n                message.info(\"Please remember to verify your email before trying to login.\")\n            } else {\n                message.error(\"Your email and/or password were incorrect. Please try again.\")\n            }\n        }\n    }\n\n    return (\n        <>\n            <Head>\n                <title>MasterSeats â€¢ Login</title>\n            </Head>\n            <LoginBackground>\n                <LoginCard title={\"Login\"} onFinish={onFinish} />\n            </LoginBackground>\n        </>\n    );\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}