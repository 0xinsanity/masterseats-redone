{"ast":null,"code":"import React, { useContext } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { Modal, Button, message } from 'antd';\nimport { UserContext } from '../../lib/UserContext';\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: `'Mark Pro Bold'`,\n      fontSize: \"16px\",\n      \"::placeholder\": {\n        color: \"#aab7c4\"\n      }\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\"\n    }\n  }\n};\n\nconst StripeCardModal = props => {\n  const {\n    currentUser\n  } = useContext(UserContext);\n  const {\n    visible,\n    payment_intent,\n    onCancel,\n    onComplete\n  } = props;\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handlePurchase = async event => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    const result = await stripe.confirmCardPayment(payment_intent, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          name: currentUser.first_name + \" \" + currentUser.last_name\n        }\n      }\n    });\n\n    if (result.error) {\n      message.error(result.error.message);\n    } else {\n      if (result.paymentIntent.status === 'succeeded') {\n        onComplete();\n      } else {\n        console.log(\"status: \" + result.paymentIntent.status);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    title: \"Purchase Ticket\",\n    visible: visible,\n    onCancel: onCancel,\n    footer: [/*#__PURE__*/React.createElement(Button, {\n      disabled: !stripe,\n      onClick: handlePurchase\n    }, \"Confirm Ticket\")]\n  }, /*#__PURE__*/React.createElement(CardElement, {\n    options: CARD_ELEMENT_OPTIONS\n  }));\n};\n\nexport default StripeCardModal;","map":{"version":3,"sources":["/Users/insanity/Documents/MasterSeats/new/client/src/areas/SellingPage/StripeCardModal.tsx"],"names":["React","useContext","CardElement","useStripe","useElements","Modal","Button","message","UserContext","CARD_ELEMENT_OPTIONS","style","base","color","fontFamily","fontSize","invalid","iconColor","StripeCardModal","props","currentUser","visible","payment_intent","onCancel","onComplete","stripe","elements","handlePurchase","event","preventDefault","result","confirmCardPayment","payment_method","card","getElement","billing_details","name","first_name","last_name","error","paymentIntent","status","console","log"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAAQC,WAAR,EAAqBC,SAArB,EAAgCC,WAAhC,QAAkD,yBAAlD;AACA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,OAAvB,QAAqC,MAArC;AACA,SAASC,WAAT,QAA4B,uBAA5B;AAEA,MAAMC,oBAAoB,GAAG;AAC3BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,SADH;AAEJC,MAAAA,UAAU,EAAG,iBAFT;AAGJC,MAAAA,QAAQ,EAAE,MAHN;AAIJ,uBAAiB;AACfF,QAAAA,KAAK,EAAE;AADQ;AAJb,KADD;AASLG,IAAAA,OAAO,EAAE;AACPH,MAAAA,KAAK,EAAE,SADA;AAEPI,MAAAA,SAAS,EAAE;AAFJ;AATJ;AADoB,CAA7B;;AAwBA,MAAMC,eAA0C,GAAGC,KAAK,IAAI;AACxD,QAAM;AAACC,IAAAA;AAAD,MAAgBlB,UAAU,CAACO,WAAD,CAAhC;AACA,QAAM;AAACY,IAAAA,OAAD;AAAUC,IAAAA,cAAV;AAA0BC,IAAAA,QAA1B;AAAoCC,IAAAA;AAApC,MAAkDL,KAAxD;AACA,QAAMM,MAAM,GAAGrB,SAAS,EAAxB;AACA,QAAMsB,QAAQ,GAAGrB,WAAW,EAA5B;;AAEA,QAAMsB,cAAc,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI,CAACJ,MAAD,IAAW,CAACC,QAAhB,EAA0B;AACxB;AACD;;AAED,UAAMI,MAAM,GAAG,MAAML,MAAM,CAACM,kBAAP,CAA0BT,cAA1B,EAA0C;AAC7DU,MAAAA,cAAc,EAAE;AACdC,QAAAA,IAAI,EAAEP,QAAQ,CAACQ,UAAT,CAAoB/B,WAApB,CADQ;AAEdgC,QAAAA,eAAe,EAAE;AACfC,UAAAA,IAAI,EAAEhB,WAAW,CAACiB,UAAZ,GAAyB,GAAzB,GAA+BjB,WAAW,CAACkB;AADlC;AAFH;AAD6C,KAA1C,CAArB;;AASA,QAAIR,MAAM,CAACS,KAAX,EAAkB;AACd/B,MAAAA,OAAO,CAAC+B,KAAR,CAAcT,MAAM,CAACS,KAAP,CAAa/B,OAA3B;AACH,KAFD,MAEO;AACL,UAAIsB,MAAM,CAACU,aAAP,CAAqBC,MAArB,KAAgC,WAApC,EAAiD;AAC/CjB,QAAAA,UAAU;AACX,OAFD,MAEO;AACHkB,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAab,MAAM,CAACU,aAAP,CAAqBC,MAA9C;AACH;AACF;AACF,GAzBH;;AA2BA,sBACI,oBAAC,KAAD;AACI,IAAA,KAAK,EAAC,iBADV;AAEI,IAAA,OAAO,EAAEpB,OAFb;AAGI,IAAA,QAAQ,EAAEE,QAHd;AAII,IAAA,MAAM,EAAE,cACJ,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,CAACE,MAAnB;AAA2B,MAAA,OAAO,EAAEE;AAApC,wBADI;AAJZ,kBAQI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEjB;AAAtB,IARJ,CADJ;AAYH,CA7CD;;AA+CA,eAAeQ,eAAf","sourcesContent":["import React, { useContext } from 'react';\nimport {CardElement, useStripe, useElements} from '@stripe/react-stripe-js';\nimport {Modal, Button, message} from 'antd'\nimport { UserContext } from '../../lib/UserContext';\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: `'Mark Pro Bold'`,\n      fontSize: \"16px\",\n      \"::placeholder\": {\n        color: \"#aab7c4\",\n      },\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n};\n\ninterface StripeCardProps {\n    visible: boolean\n    payment_intent: string\n    onCancel: () => void\n    onComplete: () => void\n}\n\nconst StripeCardModal: React.FC<StripeCardProps> = props => {\n    const {currentUser} = useContext(UserContext)\n    const {visible, payment_intent, onCancel, onComplete} = props\n    const stripe = useStripe();\n    const elements = useElements();\n\n    const handlePurchase = async (event) => {\n        event.preventDefault();\n    \n        if (!stripe || !elements) {\n          return;\n        }\n    \n        const result = await stripe.confirmCardPayment(payment_intent, {\n          payment_method: {\n            card: elements.getElement(CardElement),\n            billing_details: {\n              name: currentUser.first_name + \" \" + currentUser.last_name,\n            },\n          }\n        });\n    \n        if (result.error) {\n            message.error(result.error.message)\n        } else {\n          if (result.paymentIntent.status === 'succeeded') {\n            onComplete()\n          } else {\n              console.log(\"status: \" + result.paymentIntent.status)\n          }\n        }\n      };\n\n    return (\n        <Modal\n            title=\"Purchase Ticket\"\n            visible={visible}\n            onCancel={onCancel}\n            footer={[\n                <Button disabled={!stripe} onClick={handlePurchase}>Confirm Ticket</Button>\n            ]}\n            >\n            <CardElement options={CARD_ELEMENT_OPTIONS} />\n        </Modal>\n    );\n};\n\nexport default StripeCardModal;"]},"metadata":{},"sourceType":"module"}