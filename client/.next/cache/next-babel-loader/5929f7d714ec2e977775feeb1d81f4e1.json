{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, createContext } from \"react\";\nimport { DefaultApi } from '../../api';\nexport const UserContext = /*#__PURE__*/createContext({\n  currentToken: null,\n  currentUser: null,\n  setToken: null,\n  api: null\n});\n\nclass UserProvider extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"setToken\", async token => {\n      if (token === null) {\n        this.setState({\n          api: new DefaultApi(),\n          currentToken: null,\n          currentUser: null\n        });\n        return;\n      }\n\n      try {\n        const api = new DefaultApi({\n          accessToken: token\n        });\n        const user = await api.getUser();\n        this.setState({\n          api,\n          currentToken: token,\n          currentUser: user\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    });\n\n    _defineProperty(this, \"state\", {\n      currentToken: localStorage.getItem(\"currentToken\"),\n      currentUser: null,\n      setToken: this.setToken,\n      api: new DefaultApi({\n        accessToken: localStorage.getItem(\"currentToken\")\n      })\n    });\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      if (this.state.currentToken !== null) {\n        try {\n          const body = await this.state.api.login({\n            email: this.state.currentUser.email,\n            password: this.state.currentUser.password\n          });\n          this.setToken(body.data);\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(UserContext.Provider, {\n      value: this.state\n    }, this.props.children);\n  }\n\n}\n\nexport default UserProvider;","map":{"version":3,"sources":["/Users/insanity/Documents/MasterSeats/new/client/src/lib/UserContext.tsx"],"names":["React","Component","createContext","DefaultApi","UserContext","currentToken","currentUser","setToken","api","UserProvider","token","setState","accessToken","user","getUser","err","console","error","localStorage","getItem","state","body","login","email","password","data","render","props","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,OAAhD;AAIA,SAAcC,UAAd,QAA+B,WAA/B;AASA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,CAAwB;AAC5DG,EAAAA,YAAY,EAAE,IAD8C;AAE5DC,EAAAA,WAAW,EAAE,IAF+C;AAG5DC,EAAAA,QAAQ,EAAE,IAHkD;AAI5DC,EAAAA,GAAG,EAAE;AAJuD,CAAxB,CAAjC;;AAMP,MAAMC,YAAN,SAA2BR,SAA3B,CAAqC;AAAA;AAAA;;AAAA,sCACtB,MAAOS,KAAP,IAAgC;AACvC,UAAIA,KAAK,KAAK,IAAd,EAAoB;AAChB,aAAKC,QAAL,CAAc;AAACH,UAAAA,GAAG,EAAE,IAAIL,UAAJ,EAAN;AAAwBE,UAAAA,YAAY,EAAE,IAAtC;AAA4CC,UAAAA,WAAW,EAAE;AAAzD,SAAd;AACA;AACH;;AACD,UAAI;AACA,cAAME,GAAG,GAAG,IAAIL,UAAJ,CAAe;AAACS,UAAAA,WAAW,EAAEF;AAAd,SAAf,CAAZ;AACA,cAAMG,IAAI,GAAG,MAAML,GAAG,CAACM,OAAJ,EAAnB;AACA,aAAKH,QAAL,CAAc;AAACH,UAAAA,GAAD;AAAMH,UAAAA,YAAY,EAAEK,KAApB;AAA2BJ,UAAAA,WAAW,EAAEO;AAAxC,SAAd;AACH,OAJD,CAIE,OAAOE,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH;AACJ,KAbgC;;AAAA,mCAezB;AACJV,MAAAA,YAAY,EAAEa,YAAY,CAACC,OAAb,CAAqB,cAArB,CADV;AAEJb,MAAAA,WAAW,EAAE,IAFT;AAGJC,MAAAA,QAAQ,EAAE,KAAKA,QAHX;AAIJC,MAAAA,GAAG,EAAE,IAAIL,UAAJ,CAAe;AAACS,QAAAA,WAAW,EAAEM,YAAY,CAACC,OAAb,CAAqB,cAArB;AAAd,OAAf;AAJD,KAfyB;;AAAA,+CAsBb,YAAY;AAC5B,UAAI,KAAKC,KAAL,CAAWf,YAAX,KAA4B,IAAhC,EAAsC;AAClC,YAAI;AACA,gBAAMgB,IAAI,GAAG,MAAM,KAAKD,KAAL,CAAWZ,GAAX,CAAec,KAAf,CAAqB;AAACC,YAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWd,WAAX,CAAuBiB,KAA/B;AAAsCC,YAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWd,WAAX,CAAuBkB;AAAvE,WAArB,CAAnB;AACA,eAAKjB,QAAL,CAAcc,IAAI,CAACI,IAAnB;AACH,SAHD,CAGE,OAAOV,GAAP,EAAY;AACVC,UAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH;AACJ;AACJ,KA/BgC;AAAA;;AAiCjCW,EAAAA,MAAM,GAAG;AACL,wBACA,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,KAAKN;AAAlC,OACK,KAAKO,KAAL,CAAWC,QADhB,CADA;AAKH;;AAvCgC;;AAyCrC,eAAenB,YAAf","sourcesContent":["import React, { Component, createContext } from \"react\";\nimport Router, {withRouter} from \"next/router\";\nimport {message} from 'antd'\nimport { NextPage, NextPageContext } from 'next';\nimport {User, DefaultApi} from '../../api'\n\ninterface ContextProps {\n  currentToken?: string,\n  currentUser?: User,\n  api?: DefaultApi\n  setToken: (token: string | null) => Promise<void>\n}\n\nexport const UserContext = createContext<Partial<ContextProps>>({\n    currentToken: null,\n    currentUser: null,\n    setToken: null,\n    api: null\n});\nclass UserProvider extends Component {\n    setToken = async (token: string | null) => {\n        if (token === null) {\n            this.setState({api: new DefaultApi(), currentToken: null, currentUser: null})\n            return\n        }\n        try {\n            const api = new DefaultApi({accessToken: token})\n            const user = await api.getUser()\n            this.setState({api, currentToken: token, currentUser: user})\n        } catch (err) {\n            console.error(err)\n        }\n    }\n\n    state = {\n        currentToken: localStorage.getItem(\"currentToken\"),\n        currentUser: null,\n        setToken: this.setToken,\n        api: new DefaultApi({accessToken: localStorage.getItem(\"currentToken\")})\n    }\n\n    componentDidMount = async () => {\n        if (this.state.currentToken !== null) {\n            try {\n                const body = await this.state.api.login({email: this.state.currentUser.email, password: this.state.currentUser.password})\n                this.setToken(body.data)\n            } catch (err) {\n                console.error(err)\n            }\n        }\n    }\n\n    render() {\n        return (\n        <UserContext.Provider value={this.state}>\n            {this.props.children}\n        </UserContext.Provider>\n        );\n    }\n}\nexport default UserProvider;"]},"metadata":{},"sourceType":"module"}