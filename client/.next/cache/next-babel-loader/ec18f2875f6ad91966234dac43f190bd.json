{"ast":null,"code":"import React, { useState, useEffect, useContext } from 'react';\nimport { Table, Grid, message } from 'antd';\nimport { ScreenSize } from '../../lib';\nimport { GenButton, Container, FilterContainer, SelectContainer, returnEmojiString, GenIconButton, DollarAdjustedOutline, PurchaseContainer } from '../DashboardPage/DashboardPage.styled';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { GameSelect, FilterSelect } from '../../components/SelectOptions';\nimport { UserContext } from '../../lib/UserContext';\nconst {\n  useBreakpoint\n} = Grid;\n\nconst Buy = props => {\n  const {\n    currentUser\n  } = useContext(UserContext);\n  const {\n    tickets,\n    getTickets\n  } = props;\n  const [gameValue, setGameValue] = useState(undefined);\n  const [filterValue, setFilterValue] = useState(undefined);\n  const screens = useBreakpoint();\n  const [screenSize, setScreenSize] = useState(undefined);\n  useEffect(() => {\n    Object.entries(screens).filter(screen => !!screen[1]).map(screen => {\n      if (screen[0] !== ScreenSize[screenSize]) {\n        setScreenSize(ScreenSize[screen[0]]);\n      }\n    });\n  }, [screens]);\n\n  const clickPurchase = () => {\n    if (currentUser === null) {\n      message.error(\"Please create an account to start purchasing tickets.\");\n      return;\n    }\n\n    if (!currentUser.is_email_verified) {\n      message.error(\"Please verify your email before trying to purchase a ticket.\");\n      return;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(FilterContainer, null, /*#__PURE__*/React.createElement(SelectContainer, null, /*#__PURE__*/React.createElement(GameSelect, {\n    hasAllGames: true,\n    value: gameValue,\n    setValue: e => setGameValue(e)\n  }), /*#__PURE__*/React.createElement(FilterSelect, {\n    value: filterValue,\n    setValue: e => setFilterValue(e)\n  })), /*#__PURE__*/React.createElement(GenButton, {\n    onClick: async () => await getTickets({\n      filter: filterValue,\n      game: gameValue\n    }),\n    icon: /*#__PURE__*/React.createElement(SearchOutlined, null)\n  }, screenSize >= 1 ? \"Search\" : null)), /*#__PURE__*/React.createElement(Table, {\n    columns: [{\n      title: 'Game',\n      key: 'game',\n      dataIndex: 'game',\n      render: (text, data) => returnEmojiString(data.game)\n    }, {\n      title: 'Section',\n      key: 'section',\n      dataIndex: 'section'\n    }, {\n      title: 'Price ($)',\n      key: 'price',\n      dataIndex: 'price'\n    }, {\n      title: '',\n      key: 'buy',\n      dataIndex: 'ticketId',\n      render: (text, data) => /*#__PURE__*/React.createElement(PurchaseContainer, null, /*#__PURE__*/React.createElement(GenIconButton, {\n        icon: /*#__PURE__*/React.createElement(DollarAdjustedOutline, null),\n        onClick: clickPurchase\n      }, screenSize !== 0 ? \"Purchase\" : null))\n    }],\n    dataSource: tickets,\n    pagination: {\n      position: ['bottomCenter']\n    }\n  }));\n};\n\nexport default Buy;","map":{"version":3,"sources":["/Users/insanity/Documents/MasterSeats/new/client/src/areas/Sections/Buy.tsx"],"names":["React","useState","useEffect","useContext","Table","Grid","message","ScreenSize","GenButton","Container","FilterContainer","SelectContainer","returnEmojiString","GenIconButton","DollarAdjustedOutline","PurchaseContainer","SearchOutlined","GameSelect","FilterSelect","UserContext","useBreakpoint","Buy","props","currentUser","tickets","getTickets","gameValue","setGameValue","undefined","filterValue","setFilterValue","screens","screenSize","setScreenSize","Object","entries","filter","screen","map","clickPurchase","error","is_email_verified","e","game","title","key","dataIndex","render","text","data","position"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport { Select, Button, Table, Typography, Grid, message } from 'antd';\nimport styled from 'styled-components'\nimport _ from 'lodash'\nimport {MichiganFootballGame, FilterOptions, Ticket, TicketStatus, SortTicketsBody} from '../../../api'\nimport {ScreenSize} from '../../lib'\nimport {\n    GenButton, \n    Container, \n    FilterContainer, \n    SelectContainer, \n    returnEmojiString, \n    GenIconButton,\n    DollarAdjustedOutline,\n    PurchaseContainer\n    } from '../DashboardPage/DashboardPage.styled'\nimport {SearchOutlined} from '@ant-design/icons'\nimport {GameSelect, FilterSelect} from '../../components/SelectOptions'\nimport {UserContext} from '../../lib/UserContext'\n\nconst {useBreakpoint} = Grid\n\ninterface BuyProps {\n    tickets: Ticket[]\n    getTickets: (sortTicketBody?: SortTicketsBody) => void\n}\n\nconst Buy: React.FC<BuyProps> = props => {\n    const {currentUser}  = useContext(UserContext)\n    const {tickets, getTickets} = props\n    const [gameValue, setGameValue] = useState<MichiganFootballGame>(undefined)\n    const [filterValue, setFilterValue] = useState<FilterOptions>(undefined)\n    \n    const screens = useBreakpoint()\n    const [screenSize, setScreenSize] = useState<ScreenSize>(undefined)\n    \n    useEffect(() => {\n        Object.entries(screens)\n        .filter(screen => !!screen[1])\n        .map(screen => {\n            if (screen[0] !== ScreenSize[screenSize]) {\n                setScreenSize(ScreenSize[screen[0]])\n            }\n        })\n    }, [screens])\n\n    const clickPurchase = () => {\n        if (currentUser === null) {\n            message.error(\"Please create an account to start purchasing tickets.\")\n            return\n        }\n        if (!currentUser.is_email_verified) {\n            message.error(\"Please verify your email before trying to purchase a ticket.\")\n            return\n        }\n    }\n\n    return (\n        <Container>\n            <FilterContainer>\n                <SelectContainer>\n                    <GameSelect hasAllGames={true} value={gameValue} setValue={(e) => setGameValue(e)}/>\n                    <FilterSelect value={filterValue} setValue={(e) => setFilterValue(e)} />\n                </SelectContainer>\n                <GenButton onClick={async () => await getTickets({filter: filterValue, game: gameValue})} icon={<SearchOutlined />}>\n                    {screenSize >= 1 ? \"Search\" : null}\n                </GenButton>\n            </FilterContainer>\n            <Table columns={[\n                    {\n                        title: 'Game',\n                        key: 'game',\n                        dataIndex: 'game',\n                        render: (text, data) => returnEmojiString(data.game)\n                    },\n                    {\n                        title: 'Section',\n                        key: 'section',\n                        dataIndex: 'section'\n                    },\n                    {\n                        title: 'Price ($)',\n                        key: 'price',\n                        dataIndex: 'price'\n                    },\n                    {\n                        title: '',\n                        key: 'buy',\n                        dataIndex: 'ticketId',\n                        render: (text, data) => (\n                            <PurchaseContainer>\n                                <GenIconButton icon={<DollarAdjustedOutline/>} onClick={clickPurchase}>\n                                    {screenSize !== 0 ? \"Purchase\" : null}\n                                </GenIconButton>\n                            </PurchaseContainer>\n                        )\n                    }\n                    ]} dataSource={tickets} pagination={{ position: ['bottomCenter'] }} />\n        </Container>\n    )\n}\n\nexport default Buy"]},"metadata":{},"sourceType":"module"}