{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Table, Grid } from 'antd';\nimport { PlusCircleOutlined } from '@ant-design/icons';\nimport { Container, FilterContainer, CloseAdjustedOutline, returnEmojiString, GenIconButton, GenButton } from '../DashboardPage.styled';\nimport { MichiganFootballGame, ScreenSize } from '../../../../model';\nimport AddTicketModal from '../AddTicketModal';\nconst {\n  useBreakpoint\n} = Grid;\nconst DATA = [{\n  game: MichiganFootballGame.Ball,\n  price: 25,\n  id: '12345',\n  section: 24\n}, {\n  game: MichiganFootballGame.Arkansas,\n  price: 25,\n  id: '1234567',\n  section: 25\n}];\n\nconst Sell = () => {\n  _s();\n\n  const [visible, setVisibility] = useState(false);\n  const screens = useBreakpoint();\n  const [screenSize, setScreenSize] = useState(undefined);\n  useEffect(() => {\n    Object.entries(screens).filter(screen => !!screen[1]).map(screen => {\n      if (screen[0] !== ScreenSize[screenSize]) {\n        setScreenSize(ScreenSize[screen[0]]);\n      }\n    });\n  }, [screens]);\n  return /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(AddTicketModal, {\n    visible: visible,\n    onCancel: () => setVisibility(false)\n  }), /*#__PURE__*/React.createElement(FilterContainer, {\n    style: {\n      justifyContent: 'flex-end'\n    }\n  }, /*#__PURE__*/React.createElement(GenButton, {\n    onClick: () => setVisibility(true),\n    icon: /*#__PURE__*/React.createElement(PlusCircleOutlined, null)\n  }, \"Add Ticket\")), /*#__PURE__*/React.createElement(Table, {\n    columns: [{\n      title: 'Game',\n      key: 'game',\n      dataIndex: 'game',\n      render: (text, data) => returnEmojiString(data.game)\n    }, {\n      title: 'Section',\n      key: 'section',\n      dataIndex: 'section'\n    }, {\n      title: 'Price ($)',\n      key: 'price',\n      dataIndex: 'price'\n    }, {\n      title: '',\n      key: 'remove',\n      dataIndex: 'ticketId',\n      render: (text, data) => /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'flex-end'\n        }\n      }, /*#__PURE__*/React.createElement(GenIconButton, {\n        icon: /*#__PURE__*/React.createElement(CloseAdjustedOutline, null),\n        onClick: () => {}\n      }, screenSize >= 0 ? \"Remove\" : null))\n    }],\n    dataSource: DATA,\n    pagination: {\n      position: ['bottomCenter']\n    }\n  }));\n};\n\n_s(Sell, \"mCcIZmvXvUqWXmTLtNyoIBSVOWs=\", false, function () {\n  return [useBreakpoint];\n});\n\n_c = Sell;\nexport default Sell;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sell\");","map":{"version":3,"sources":["/Users/insanity/Documents/MasterSeats/masterseats-redone/client/src/areas/DashboardPage/Sections/Sell.tsx"],"names":["React","useState","useEffect","Table","Grid","PlusCircleOutlined","Container","FilterContainer","CloseAdjustedOutline","returnEmojiString","GenIconButton","GenButton","MichiganFootballGame","ScreenSize","AddTicketModal","useBreakpoint","DATA","game","Ball","price","id","section","Arkansas","Sell","visible","setVisibility","screens","screenSize","setScreenSize","undefined","Object","entries","filter","screen","map","justifyContent","title","key","dataIndex","render","text","data","display","position"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Table, Modal, Grid} from 'antd'\nimport {CloseOutlined, PlusCircleOutlined} from '@ant-design/icons'\nimport {Container, FilterContainer, CloseAdjustedOutline, returnEmojiString, GenIconButton, GenButton} from '../DashboardPage.styled'\nimport {MichiganFootballGame, FilterOptions, Ticket, ScreenSize} from '../../../../model'\nimport AddTicketModal from '../AddTicketModal'\nimport media from \"styled-media-query\";\nconst {useBreakpoint} = Grid\n  \nconst DATA: Ticket[] = [\n    {\n        game: MichiganFootballGame.Ball,\n        price: 25,\n        id: '12345',\n        section: 24\n    },\n    {\n        game: MichiganFootballGame.Arkansas,\n        price: 25,\n        id: '1234567',\n        section: 25\n    },\n    \n];\n\nconst Sell: React.FC = () => {\n    const [visible, setVisibility] = useState(false)\n\n    const screens = useBreakpoint()\n    const [screenSize, setScreenSize] = useState<ScreenSize>(undefined)\n    \n    useEffect(() => {\n        Object.entries(screens)\n        .filter(screen => !!screen[1])\n        .map(screen => {\n            if (screen[0] !== ScreenSize[screenSize]) {\n                setScreenSize(ScreenSize[screen[0]])\n            }\n        })\n    }, [screens])\n\n    return (\n        <Container>\n            <AddTicketModal visible={visible} \n                            onCancel={() => setVisibility(false)}/>\n            <FilterContainer style={{justifyContent: 'flex-end'}}>\n                <GenButton onClick={() => setVisibility(true)} icon={<PlusCircleOutlined />}>\n                    Add Ticket\n                </GenButton>\n            </FilterContainer>\n            <Table columns={[\n                {\n                    title: 'Game',\n                    key: 'game',\n                    dataIndex: 'game',\n                    render: (text, data) => returnEmojiString(data.game)\n                },\n                {\n                    title: 'Section',\n                    key: 'section',\n                    dataIndex: 'section'\n                },\n                {\n                    title: 'Price ($)',\n                    key: 'price',\n                    dataIndex: 'price'\n                },\n                {\n                    title: '',\n                    key: 'remove',\n                    dataIndex: 'ticketId',\n                    render: (text, data) => (\n                        <div style={{display: 'flex', justifyContent: 'flex-end'}}>\n                            <GenIconButton icon={<CloseAdjustedOutline />} onClick={() => {}}>\n                                {screenSize >= 0 ? \"Remove\" : null}\n                            </GenIconButton>\n                        </div>\n                    )\n                }\n            ]} dataSource={DATA} pagination={{ position: ['bottomCenter'] }} />\n        </Container>\n    )\n}\n\nexport default Sell"]},"metadata":{},"sourceType":"module"}