{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Table, Grid, Typography } from 'antd';\nimport { Container, returnEmojiString, GenIconButton, CloseAdjustedOutline, ExclamationCircleAdjustedOutlined } from '../../DashboardPage/DashboardPage.styled';\nimport { ScreenSize } from '../../../lib';\nimport { Tabs } from 'antd';\nimport AreYouSureModal from '../../Universal/AreYouSureModal';\nconst {\n  TabPane\n} = Tabs;\nconst {\n  useBreakpoint\n} = Grid;\n\nconst Pending = props => {\n  _s();\n\n  const {\n    pendingSold,\n    pendingBuy,\n    confirmTransferSeller,\n    confirmTransferBuyer,\n    refundTicket\n  } = props;\n  const screens = useBreakpoint();\n  const [screenSize, setScreenSize] = useState(undefined);\n  const [visible, setVisibility] = useState(false);\n  const [action, setAction] = useState(\"\");\n  const [id, setId] = useState(\"\");\n\n  const columns = isBuyer => {\n    if (isBuyer) {\n      return [{\n        title: 'Game',\n        key: 'game',\n        dataIndex: 'game',\n        render: (text, data) => returnEmojiString(data.game)\n      }, {\n        title: 'Section',\n        key: 'section',\n        dataIndex: 'section'\n      }, {\n        title: 'Price ($)',\n        key: 'price',\n        dataIndex: 'price'\n      }, {\n        title: '',\n        key: 'confirm',\n        dataIndex: 'id',\n        render: (text, data) => {\n          if (data.confirmed_seller_transfer) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'flex-end'\n              }\n            }, /*#__PURE__*/React.createElement(GenIconButton, {\n              disabled: data.confirmed_buyer_transfer,\n              icon: /*#__PURE__*/React.createElement(ExclamationCircleAdjustedOutlined, null),\n              onClick: () => {\n                setVisibility(true);\n                setId(data.id);\n                setAction(\"confirmTransferBuyer\");\n              }\n            }, screenSize > 0 ? \"Confirm Transfer\" : null));\n          } else {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'flex-end'\n              }\n            }, /*#__PURE__*/React.createElement(Typography.Text, null, \"Seller Must Confirm Transfer\"));\n          }\n        }\n      }, {\n        title: '',\n        key: 'refund',\n        dataIndex: 'id',\n        render: (text, data) => {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'flex-end'\n            }\n          }, /*#__PURE__*/React.createElement(GenIconButton, {\n            icon: /*#__PURE__*/React.createElement(CloseAdjustedOutline, null),\n            onClick: () => {\n              setVisibility(true);\n              setId(data.id);\n              setAction(\"refundTicket\");\n            }\n          }, screenSize > 0 ? \"Get Refund\" : null));\n        }\n      }];\n    } else {\n      return [{\n        title: 'Game',\n        key: 'game',\n        dataIndex: 'game',\n        render: (text, data) => returnEmojiString(data.game)\n      }, {\n        title: 'Section',\n        key: 'section',\n        dataIndex: 'section'\n      }, {\n        title: 'Price ($)',\n        key: 'price',\n        dataIndex: 'price'\n      }, {\n        title: '',\n        key: 'confirm',\n        dataIndex: 'id',\n        render: (text, data) => {\n          if (!data.confirmed_buyer_transfer && data.confirmed_seller_transfer) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'flex-end'\n              }\n            }, /*#__PURE__*/React.createElement(Typography.Text, null, \"Buyer Must Confirm Transfer\"));\n          } else {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'flex-end'\n              }\n            }, /*#__PURE__*/React.createElement(GenIconButton, {\n              disabled: data.confirmed_seller_transfer,\n              icon: /*#__PURE__*/React.createElement(ExclamationCircleAdjustedOutlined, null),\n              onClick: () => {\n                setVisibility(true);\n                setId(data.id);\n                setAction(\"confirmTransferSeller\");\n              }\n            }, screenSize > 0 ? \"Confirm Transfer\" : null));\n          }\n        }\n      }\n      /*,\n      {\n         title: '',\n         key: 'cancel',\n         dataIndex: 'id',\n         render: (text, data) => {\n             var disabled: boolean\n             if (isBuyer) {\n                 disabled = !data.confirmed_seller_transfer\n             } else {\n                 disabled = !data.confirmed_buyer_transfer\n             }\n              return (<div style={{display: 'flex', justifyContent: 'flex-end'}}>\n                 <GenIconButton icon={<CloseAdjustedOutline />} onClick={() => {\n                     setVisibility(true)\n                     setId(data.id)\n                     setAction(\"refundTicket\")\n                 }}>\n                     {screenSize > 0 ? \"Cancel Transfer\" : null}\n                 </GenIconButton>\n             </div>)\n         }\n      }*/\n      ];\n    }\n  };\n\n  useEffect(() => {\n    Object.entries(screens).filter(screen => !!screen[1]).map(screen => {\n      if (screen[0] !== ScreenSize[screenSize]) {\n        setScreenSize(ScreenSize[screen[0]]);\n      }\n    });\n  }, [screens]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AreYouSureModal, {\n    title: \"Are you sure you want to remove the ticket?\",\n    visible: visible,\n    onCancel: () => setVisibility(false),\n    onComplete: async () => {\n      setVisibility(false);\n\n      if (action === \"refundTicket\") {\n        await refundTicket(id);\n      } else if (action === \"confirmTransferBuyer\") {\n        await confirmTransferBuyer(id);\n      } else if (action === \"confirmTransferSeller\") {\n        await confirmTransferSeller(id);\n      }\n    }\n  }), /*#__PURE__*/React.createElement(Tabs, {\n    style: {\n      borderBottom: 0,\n      fontFamily: 'Mark Pro',\n      fontSize: 14,\n      textAlign: 'center'\n    },\n    defaultActiveKey: \"1\",\n    centered: true,\n    size: \"large\"\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Sold\",\n    key: \"1\"\n  }, /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Table, {\n    columns: columns(false),\n    dataSource: pendingSold,\n    pagination: {\n      position: ['bottomCenter']\n    }\n  }))), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Bought\",\n    key: \"2\"\n  }, /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Table, {\n    columns: columns(true),\n    dataSource: pendingBuy,\n    pagination: {\n      position: ['bottomCenter']\n    }\n  })))));\n};\n\n_s(Pending, \"mWwRCSuxSIFNev+9ek+QcbRgVu8=\", false, function () {\n  return [useBreakpoint];\n});\n\n_c = Pending;\nexport default Pending;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pending\");","map":{"version":3,"sources":["/Users/insanity/Documents/MasterSeats/new/client/src/areas/TicketWallet/Sections/Pending.tsx"],"names":["React","useState","useEffect","Table","Grid","Typography","Container","returnEmojiString","GenIconButton","CloseAdjustedOutline","ExclamationCircleAdjustedOutlined","ScreenSize","Tabs","AreYouSureModal","TabPane","useBreakpoint","Pending","props","pendingSold","pendingBuy","confirmTransferSeller","confirmTransferBuyer","refundTicket","screens","screenSize","setScreenSize","undefined","visible","setVisibility","action","setAction","id","setId","columns","isBuyer","title","key","dataIndex","render","text","data","game","confirmed_seller_transfer","display","justifyContent","confirmed_buyer_transfer","Object","entries","filter","screen","map","borderBottom","fontFamily","fontSize","textAlign","position"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\nimport {Table, Modal, Grid, message, Typography} from 'antd'\nimport {Container, \n        returnEmojiString, \n        GenIconButton, \n        CloseAdjustedOutline,\n        ExclamationCircleAdjustedOutlined} from '../../DashboardPage/DashboardPage.styled'\nimport {MichiganFootballGame, Ticket, TicketStatus, PostTicketBody} from '../../../../api'\nimport {ScreenSize} from '../../../lib'\nimport { Tabs } from 'antd';\nimport AreYouSureModal from '../../Universal/AreYouSureModal'\n\nconst { TabPane } = Tabs;\n\nconst {useBreakpoint} = Grid\n\ninterface PendingProps {\n    pendingSold: Ticket[],\n    pendingBuy: Ticket[],\n    confirmTransferSeller: (ticket_id: string) => void,\n    confirmTransferBuyer: (ticket_id: string) => void\n    refundTicket: (ticket_id: string) => void\n}\n\nconst Pending: React.FC<PendingProps> = props => {\n    const {pendingSold, pendingBuy, confirmTransferSeller, confirmTransferBuyer, refundTicket} = props\n\n    const screens = useBreakpoint()\n    const [screenSize, setScreenSize] = useState<ScreenSize>(undefined)\n    const [visible, setVisibility] = useState(false)\n    const [action, setAction] = useState(\"\")\n    const [id, setId] = useState(\"\")\n\n    const columns = (isBuyer: boolean) => {\n        if (isBuyer) {\n            return [\n                {\n                    title: 'Game',\n                    key: 'game',\n                    dataIndex: 'game',\n                    render: (text, data) => returnEmojiString(data.game)\n                },\n                {\n                    title: 'Section',\n                    key: 'section',\n                    dataIndex: 'section'\n                },\n                {\n                    title: 'Price ($)',\n                    key: 'price',\n                    dataIndex: 'price'\n                },\n                {\n                    title: '',\n                    key: 'confirm',\n                    dataIndex: 'id',\n                    render: (text, data) => {\n                        if (data.confirmed_seller_transfer) {\n                            return (<div style={{display: 'flex', justifyContent: 'flex-end'}}>\n                                <GenIconButton disabled={data.confirmed_buyer_transfer} icon={<ExclamationCircleAdjustedOutlined />} onClick={() => {\n                                    setVisibility(true)\n                                    setId(data.id)\n                                    setAction(\"confirmTransferBuyer\")\n                                }}>\n                                    {screenSize > 0 ? \"Confirm Transfer\" : null}\n                                </GenIconButton>\n                            </div>)\n                        } else {\n                            return (\n                                <div style={{display: 'flex', justifyContent: 'flex-end'}}>\n                                    <Typography.Text>Seller Must Confirm Transfer</Typography.Text>\n                                </div>\n                            )\n                        }\n                    }\n                },\n                {\n                    title: '',\n                    key: 'refund',\n                    dataIndex: 'id',\n                    render: (text, data) => {\n                        return (<div style={{display: 'flex', justifyContent: 'flex-end'}}>\n                            <GenIconButton icon={<CloseAdjustedOutline />} onClick={() => {\n                                setVisibility(true)\n                                setId(data.id)\n                                setAction(\"refundTicket\")\n                            }}>\n                                {screenSize > 0 ? \"Get Refund\" : null}\n                            </GenIconButton>\n                        </div>)\n                    }\n                }\n            ]\n        } else {\n            return [\n                {\n                    title: 'Game',\n                    key: 'game',\n                    dataIndex: 'game',\n                    render: (text, data) => returnEmojiString(data.game)\n                },\n                {\n                    title: 'Section',\n                    key: 'section',\n                    dataIndex: 'section'\n                },\n                {\n                    title: 'Price ($)',\n                    key: 'price',\n                    dataIndex: 'price'\n                },\n                {\n                    title: '',\n                    key: 'confirm',\n                    dataIndex: 'id',\n                    render: (text, data) => {\n                        if (!data.confirmed_buyer_transfer && data.confirmed_seller_transfer) {\n                            return (\n                                <div style={{display: 'flex', justifyContent: 'flex-end'}}>\n                                    <Typography.Text>Buyer Must Confirm Transfer</Typography.Text>\n                                </div>\n                            )\n                        } else {\n                            return (<div style={{display: 'flex', justifyContent: 'flex-end'}}>\n                                <GenIconButton disabled={data.confirmed_seller_transfer} icon={<ExclamationCircleAdjustedOutlined />} onClick={() => {\n                                    setVisibility(true)\n                                    setId(data.id)\n                                    setAction(\"confirmTransferSeller\")\n                                }}>\n                                    {screenSize > 0 ? \"Confirm Transfer\" : null}\n                                </GenIconButton>\n                            </div>)\n                        }\n                    }\n                }/*,\n                {\n                    title: '',\n                    key: 'cancel',\n                    dataIndex: 'id',\n                    render: (text, data) => {\n                        var disabled: boolean\n                        if (isBuyer) {\n                            disabled = !data.confirmed_seller_transfer\n                        } else {\n                            disabled = !data.confirmed_buyer_transfer\n                        }\n\n                        return (<div style={{display: 'flex', justifyContent: 'flex-end'}}>\n                            <GenIconButton icon={<CloseAdjustedOutline />} onClick={() => {\n                                setVisibility(true)\n                                setId(data.id)\n                                setAction(\"refundTicket\")\n                            }}>\n                                {screenSize > 0 ? \"Cancel Transfer\" : null}\n                            </GenIconButton>\n                        </div>)\n                    }\n                }*/\n            ]\n        }\n    }\n    \n    useEffect(() => {\n        Object.entries(screens)\n        .filter(screen => !!screen[1])\n        .map(screen => {\n            if (screen[0] !== ScreenSize[screenSize]) {\n                setScreenSize(ScreenSize[screen[0]])\n            }\n        })\n    }, [screens])\n\n    return (\n        <>\n            <AreYouSureModal title={\"Are you sure you want to remove the ticket?\"}\n                            visible={visible}\n                            onCancel={() => setVisibility(false)}\n                            onComplete={async () => {\n                                setVisibility(false)\n                                if (action === \"refundTicket\") {\n                                    await refundTicket(id)\n                                } else if (action === \"confirmTransferBuyer\") {\n                                    await confirmTransferBuyer(id)\n                                } else if (action === \"confirmTransferSeller\") {\n                                    await confirmTransferSeller(id)\n                                }\n                            }}\n                />\n            <Tabs style={{\n                borderBottom: 0,\n                fontFamily: 'Mark Pro',\n                fontSize: 14, \n                textAlign: 'center'\n            }} defaultActiveKey={\"1\"} centered={true} size=\"large\">\n                <TabPane tab=\"Sold\" key=\"1\">\n                    <Container>\n                        <Table columns={columns(false)} dataSource={pendingSold} pagination={{ position: ['bottomCenter'] }} />\n                    </Container>\n                </TabPane>\n                <TabPane tab=\"Bought\" key=\"2\">\n                    <Container>\n                        <Table columns={columns(true)} dataSource={pendingBuy} pagination={{ position: ['bottomCenter'] }} />\n                    </Container>\n                </TabPane>\n            </Tabs>\n        </>\n    )\n}\n\nexport default Pending"]},"metadata":{},"sourceType":"module"}