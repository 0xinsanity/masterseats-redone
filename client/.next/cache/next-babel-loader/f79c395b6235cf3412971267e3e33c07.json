{"ast":null,"code":"import React, { useContext, useState } from 'react';\nimport { Tabs } from 'antd';\nimport SellSection from '../Sections/Sell';\nimport BuySection from '../Sections/Buy';\nimport ProfileSection from '../Sections/Profile';\nimport { UserContext } from '../../lib/UserContext';\nconst {\n  TabPane\n} = Tabs;\n\nconst BuySellTab = () => {\n  const {\n    api\n  } = useContext(UserContext);\n  const [tickets, setTickets] = useState([]);\n  const [ticketWallet, setTicketWallet] = useState([]);\n\n  const getTickets = async sortTicketBody => {\n    var sortFields = sortTicketBody;\n\n    if (sortTicketBody.game === \"All Games\") {\n      sortFields = {\n        filter: sortTicketBody.filter\n      };\n    }\n\n    const body = await api.sortTickets(sortFields);\n    console.log(body.data);\n    setTickets(body.data);\n  };\n\n  const getTicketWallet = async () => {\n    const body = await api.getTicketWallet();\n    setTicketWallet(body.data);\n  };\n\n  const postTicket = async ticketBody => {\n    await api.postTicket(ticketBody);\n    await getTicketWallet();\n  };\n\n  const removeTicket = async ticketId => {\n    await api.removeTicket({\n      id: ticketId\n    });\n    await getTicketWallet();\n  };\n\n  return /*#__PURE__*/React.createElement(Tabs, {\n    style: {\n      borderBottom: 0,\n      fontFamily: 'Mark Pro Bold',\n      textAlign: 'center'\n    },\n    defaultActiveKey: \"1\",\n    centered: true,\n    size: \"large\"\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Buy\",\n    key: \"1\"\n  }, /*#__PURE__*/React.createElement(BuySection, {\n    tickets: tickets,\n    getTickets: getTickets\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Sell\",\n    key: \"2\"\n  }, /*#__PURE__*/React.createElement(SellSection, {\n    tickets: ticketWallet,\n    postTicket: postTicket\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Profile\",\n    key: \"3\"\n  }, /*#__PURE__*/React.createElement(ProfileSection, null)));\n};\n\nexport default BuySellTab;","map":{"version":3,"sources":["/Users/insanity/Documents/MasterSeats/new/client/src/areas/DashboardPage/BuySellTab.tsx"],"names":["React","useContext","useState","Tabs","SellSection","BuySection","ProfileSection","UserContext","TabPane","BuySellTab","api","tickets","setTickets","ticketWallet","setTicketWallet","getTickets","sortTicketBody","sortFields","game","filter","body","sortTickets","console","log","data","getTicketWallet","postTicket","ticketBody","removeTicket","ticketId","id","borderBottom","fontFamily","textAlign"],"mappings":"AAAA,OAAOA,KAAP,IAA0BC,UAA1B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SAASC,IAAT,QAAqB,MAArB;AAEA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AAEA,SAAQC,WAAR,QAA0B,uBAA1B;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAcL,IAApB;;AAEA,MAAMM,UAAoB,GAAG,MAAM;AAC/B,QAAM;AAACC,IAAAA;AAAD,MAAQT,UAAU,CAACM,WAAD,CAAxB;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAW,EAAX,CAAtC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAW,EAAX,CAAhD;;AAEA,QAAMa,UAAU,GAAG,MAAOC,cAAP,IAA2B;AAC1C,QAAIC,UAAU,GAAGD,cAAjB;;AACA,QAAIA,cAAc,CAACE,IAAf,KAAwB,WAA5B,EAAyC;AACrCD,MAAAA,UAAU,GAAG;AAACE,QAAAA,MAAM,EAAEH,cAAc,CAACG;AAAxB,OAAb;AACH;;AAED,UAAMC,IAAI,GAAG,MAAMV,GAAG,CAACW,WAAJ,CAAgBJ,UAAhB,CAAnB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,IAAjB;AACAZ,IAAAA,UAAU,CAACQ,IAAI,CAACI,IAAN,CAAV;AACH,GATD;;AAUA,QAAMC,eAAe,GAAG,YAAY;AAChC,UAAML,IAAI,GAAG,MAAMV,GAAG,CAACe,eAAJ,EAAnB;AACAX,IAAAA,eAAe,CAACM,IAAI,CAACI,IAAN,CAAf;AACH,GAHD;;AAKA,QAAME,UAAU,GAAG,MAAOC,UAAP,IAAsC;AACrD,UAAMjB,GAAG,CAACgB,UAAJ,CAAeC,UAAf,CAAN;AACA,UAAMF,eAAe,EAArB;AACH,GAHD;;AAKA,QAAMG,YAAY,GAAG,MAAOC,QAAP,IAA4B;AAC7C,UAAMnB,GAAG,CAACkB,YAAJ,CAAiB;AAACE,MAAAA,EAAE,EAAED;AAAL,KAAjB,CAAN;AACA,UAAMJ,eAAe,EAArB;AACH,GAHD;;AAKA,sBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTM,MAAAA,YAAY,EAAE,CADL;AAETC,MAAAA,UAAU,EAAE,eAFH;AAGTC,MAAAA,SAAS,EAAE;AAHF,KAAb;AAIG,IAAA,gBAAgB,EAAC,GAJpB;AAIwB,IAAA,QAAQ,EAAE,IAJlC;AAIwC,IAAA,IAAI,EAAC;AAJ7C,kBAKI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAC,KAAb;AAAmB,IAAA,GAAG,EAAC;AAAvB,kBACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEtB,OAArB;AAA8B,IAAA,UAAU,EAAEI;AAA1C,IADJ,CALJ,eAQI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAC,MAAb;AAAoB,IAAA,GAAG,EAAC;AAAxB,kBACI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEF,YAAtB;AAAoC,IAAA,UAAU,EAAEa;AAAhD,IADJ,CARJ,eAWI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAC,SAAb;AAAuB,IAAA,GAAG,EAAC;AAA3B,kBACI,oBAAC,cAAD,OADJ,CAXJ,CADJ;AAiBH,CA/CD;;AAiDA,eAAejB,UAAf","sourcesContent":["import React, {useEffect, useContext, useState} from 'react'\nimport { Tabs } from 'antd';\nimport styled from 'styled-components'\nimport SellSection from '../Sections/Sell'\nimport BuySection from '../Sections/Buy'\nimport ProfileSection from '../Sections/Profile'\nimport {Ticket, SortTicketsBody, PostTicketBody} from '../../../api'\nimport {UserContext} from '../../lib/UserContext'\n\nconst { TabPane } = Tabs;\n\nconst BuySellTab: React.FC = () => {\n    const {api} = useContext(UserContext)\n    const [tickets, setTickets] = useState<Ticket[]>([])\n    const [ticketWallet, setTicketWallet] = useState<Ticket[]>([])\n\n    const getTickets = async (sortTicketBody?) => {\n        var sortFields = sortTicketBody\n        if (sortTicketBody.game === \"All Games\") {\n            sortFields = {filter: sortTicketBody.filter}\n        }\n\n        const body = await api.sortTickets(sortFields)\n        console.log(body.data)\n        setTickets(body.data)\n    }\n    const getTicketWallet = async () => {\n        const body = await api.getTicketWallet()\n        setTicketWallet(body.data)\n    }\n\n    const postTicket = async (ticketBody: PostTicketBody) => {\n        await api.postTicket(ticketBody)\n        await getTicketWallet()\n    }\n\n    const removeTicket = async (ticketId: string) => {\n        await api.removeTicket({id: ticketId})\n        await getTicketWallet()\n    }\n\n    return (\n        <Tabs style={{\n            borderBottom: 0,\n            fontFamily: 'Mark Pro Bold',\n            textAlign: 'center'\n        }} defaultActiveKey=\"1\" centered={true} size=\"large\">\n            <TabPane tab=\"Buy\" key=\"1\">\n                <BuySection tickets={tickets} getTickets={getTickets}/>\n            </TabPane>\n            <TabPane tab=\"Sell\" key=\"2\">\n                <SellSection tickets={ticketWallet} postTicket={postTicket}/>\n            </TabPane>\n            <TabPane tab=\"Profile\" key=\"3\">\n                <ProfileSection />\n            </TabPane>\n        </Tabs>\n    )\n}\n\nexport default BuySellTab"]},"metadata":{},"sourceType":"module"}