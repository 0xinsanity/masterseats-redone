{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { Table, Grid } from 'antd';\nimport { Container, CloseAdjustedOutline, returnEmojiString, GenIconButton, GenButton, AddTicketContainer, PlusCircleAdjustedOutline } from '../../DashboardPage/DashboardPage.styled';\nimport { ScreenSize } from '../../../lib';\nimport AddTicketModal from '../AddTicketModal';\nimport AreYouSureModal from '../../Universal/AreYouSureModal';\nconst {\n  useBreakpoint\n} = Grid;\n\nconst Sell = props => {\n  const {\n    tickets,\n    postTicket,\n    removeTicket,\n    visible,\n    setVisibility\n  } = props;\n  const screens = useBreakpoint();\n  const [screenSize, setScreenSize] = useState(undefined);\n  const [removeTicketVisible, setRemoveTicketVisible] = useState(false);\n  const [removeTicketId, setRemoveTicketId] = useState('');\n  useEffect(() => {\n    Object.entries(screens).filter(screen => !!screen[1]).map(screen => {\n      if (screen[0] !== ScreenSize[screenSize]) {\n        setScreenSize(ScreenSize[screen[0]]);\n      }\n    });\n  }, [screens]);\n\n  const clickAddTicket = () => {\n    setVisibility(true);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(AddTicketModal, {\n    postTicket: postTicket,\n    visible: visible,\n    onCancel: () => setVisibility(false)\n  }), /*#__PURE__*/React.createElement(AreYouSureModal, {\n    title: \"Are you sure you want to remove the ticket?\",\n    visible: removeTicketVisible,\n    onCancel: () => setRemoveTicketVisible(false),\n    onComplete: async () => {\n      await removeTicket(removeTicketId);\n      setRemoveTicketVisible(false);\n    }\n  }), /*#__PURE__*/React.createElement(AddTicketContainer, null, /*#__PURE__*/React.createElement(GenButton, {\n    onClick: clickAddTicket,\n    icon: /*#__PURE__*/React.createElement(PlusCircleAdjustedOutline, null)\n  }, screenSize >= 1 ? \"Add Ticket\" : null)), /*#__PURE__*/React.createElement(Table, {\n    columns: [{\n      title: 'Game',\n      key: 'game',\n      dataIndex: 'game',\n      render: (text, data) => returnEmojiString(data.game)\n    }, {\n      title: 'Section',\n      key: 'section',\n      dataIndex: 'section'\n    }, {\n      title: 'Price ($)',\n      key: 'price',\n      dataIndex: 'price',\n      render: text => parseFloat(text).toFixed(2)\n    }, {\n      title: '',\n      key: 'remove',\n      dataIndex: 'id',\n      render: (text, data) => /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'flex-end'\n        }\n      }, /*#__PURE__*/React.createElement(GenIconButton, {\n        icon: /*#__PURE__*/React.createElement(CloseAdjustedOutline, null),\n        onClick: () => {\n          setRemoveTicketId(data.id);\n          setRemoveTicketVisible(true);\n        }\n      }, screenSize > 0 ? \"Remove\" : null))\n    }],\n    dataSource: tickets,\n    pagination: {\n      position: ['bottomCenter']\n    }\n  }));\n};\n\nexport default Sell;","map":{"version":3,"sources":["/Users/insanity/Documents/MasterSeats/new/client/src/areas/TicketWallet/Sections/Sell.tsx"],"names":["React","useState","useEffect","Table","Grid","Container","CloseAdjustedOutline","returnEmojiString","GenIconButton","GenButton","AddTicketContainer","PlusCircleAdjustedOutline","ScreenSize","AddTicketModal","AreYouSureModal","useBreakpoint","Sell","props","tickets","postTicket","removeTicket","visible","setVisibility","screens","screenSize","setScreenSize","undefined","removeTicketVisible","setRemoveTicketVisible","removeTicketId","setRemoveTicketId","Object","entries","filter","screen","map","clickAddTicket","title","key","dataIndex","render","text","data","game","parseFloat","toFixed","display","justifyContent","id","position"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\nimport {Table, Modal, Grid, message} from 'antd'\nimport {Container, CloseAdjustedOutline, returnEmojiString, GenIconButton, GenButton, AddTicketContainer, PlusCircleAdjustedOutline} from '../../DashboardPage/DashboardPage.styled'\nimport {MichiganFootballGame, Ticket, TicketStatus, PostTicketBody} from '../../../../api'\nimport {ScreenSize} from '../../../lib'\nimport AddTicketModal from '../AddTicketModal'\nimport {UserContext} from '../../../lib/UserContext'\nimport OpenPage from '../../Universal/OpenPage'\nimport AreYouSureModal from '../../Universal/AreYouSureModal'\n\nconst {useBreakpoint} = Grid\n\ninterface SellProps {\n    tickets: Ticket[]\n    postTicket: (ticketBody: PostTicketBody) => void\n    removeTicket: (ticketId: string) => void\n    visible: boolean\n    setVisibility: (visible: boolean) => void\n}\n\nconst Sell: React.FC<SellProps> = props => {\n    const {tickets, postTicket, removeTicket, visible, setVisibility} = props\n\n    const screens = useBreakpoint()\n    const [screenSize, setScreenSize] = useState<ScreenSize>(undefined)\n    const [removeTicketVisible, setRemoveTicketVisible] = useState(false)\n    const [removeTicketId, setRemoveTicketId] = useState('')\n    \n    useEffect(() => {\n        Object.entries(screens)\n        .filter(screen => !!screen[1])\n        .map(screen => {\n            if (screen[0] !== ScreenSize[screenSize]) {\n                setScreenSize(ScreenSize[screen[0]])\n            }\n        })\n    }, [screens])\n\n\n    const clickAddTicket = () => {\n        setVisibility(true)\n    }\n\n    return (\n        <Container>\n            <AddTicketModal postTicket={postTicket}\n                            visible={visible} \n                            onCancel={() => setVisibility(false)}/>\n            <AreYouSureModal title={\"Are you sure you want to remove the ticket?\"}\n                            visible={removeTicketVisible}\n                            onCancel={() => setRemoveTicketVisible(false)}\n                            onComplete={async () => {\n                                await removeTicket(removeTicketId)\n                                setRemoveTicketVisible(false)\n                            }}\n                />\n            <AddTicketContainer>\n                <GenButton onClick={clickAddTicket} icon={<PlusCircleAdjustedOutline />}>\n                    {screenSize >= 1 ? \"Add Ticket\" : null}\n                </GenButton>\n            </AddTicketContainer>\n            <Table columns={[\n                {\n                    title: 'Game',\n                    key: 'game',\n                    dataIndex: 'game',\n                    render: (text, data) => returnEmojiString(data.game)\n                },\n                {\n                    title: 'Section',\n                    key: 'section',\n                    dataIndex: 'section'\n                },\n                {\n                    title: 'Price ($)',\n                    key: 'price',\n                    dataIndex: 'price',\n                    render: (text) => parseFloat(text).toFixed(2)\n                },\n                {\n                    title: '',\n                    key: 'remove',\n                    dataIndex: 'id',\n                    render: (text, data) => (\n                        <div style={{display: 'flex', justifyContent: 'flex-end'}}>\n                            <GenIconButton icon={<CloseAdjustedOutline />} onClick={() => {\n                                setRemoveTicketId(data.id)\n                                setRemoveTicketVisible(true)\n                            }}>\n                                {screenSize > 0 ? \"Remove\" : null}\n                            </GenIconButton>\n                        </div>\n                    )\n                }\n            ]} dataSource={tickets} pagination={{ position: ['bottomCenter'] }} />\n        </Container>\n    )\n}\n\nexport default Sell"]},"metadata":{},"sourceType":"module"}