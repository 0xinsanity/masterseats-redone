{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { StyledHeader, MenuLogoContainer, LogoBackground, MenuStyled, NavBarItemMain, NavBarItem } from './Navbar.styled';\nimport OpenPage from './OpenPage';\nimport { ScreenSize } from '../../model';\nimport { Grid } from 'antd';\nimport _ from 'lodash';\nconst {\n  useBreakpoint\n} = Grid;\nconst NAV_OPTIONS = [{\n  title: 'Home',\n  onClick: () => OpenPage('/')\n}, {\n  title: 'Login',\n  onClick: () => OpenPage('/login')\n}, {\n  title: 'Sign Up',\n  onClick: () => OpenPage('/register')\n}];\nconst DASHBOARD_NAV_OPTIONS = [{\n  title: 'Dashboard',\n  onClick: () => OpenPage('/dashboard')\n}, {\n  title: 'Log Out',\n  onClick: () => OpenPage('/')\n}];\n\nconst Navbar = props => {\n  _s();\n\n  const {\n    selected,\n    isDashboard\n  } = props;\n  const [isAtTop, setIsAtTop] = useState(true);\n  const screens = useBreakpoint();\n  const [screenSize, setScreenSize] = useState(undefined);\n  useEffect(() => {\n    Object.entries(screens).filter(screen => !!screen[1]).map(screen => {\n      console.log(screen);\n\n      if (screen[0] !== ScreenSize[screenSize]) {\n        setScreenSize(ScreenSize[screen[0]]);\n      }\n    });\n  }, [screens]);\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY;\n\n      if (currentScrollY == 0) {\n        setIsAtTop(true);\n      }\n\n      if (currentScrollY > 0) {\n        setIsAtTop(false);\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll, {\n      passive: true\n    });\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, [isAtTop]);\n  return /*#__PURE__*/React.createElement(StyledHeader, {\n    style: {\n      backgroundColor: isAtTop ? '#FFCB05' : 'rgba(255,255,255,0.85)'\n    }\n  }, /*#__PURE__*/React.createElement(MenuLogoContainer, null, !isDashboard || isDashboard === undefined || screenSize == 0 ? /*#__PURE__*/React.createElement(LogoBackground, {\n    style: {\n      visibility: isAtTop ? 'hidden' : 'visible',\n      opacity: isAtTop ? 0 : 1\n    },\n    href: '/'\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    height: 42,\n    src: require('../../assets/images/logo/logo.png'),\n    alt: \"MasterSeats Logo\"\n  })) : null, /*#__PURE__*/React.createElement(MenuStyled, null, _.map(!isDashboard || isDashboard === undefined ? NAV_OPTIONS : DASHBOARD_NAV_OPTIONS, ({\n    title,\n    onClick\n  }, index) => {\n    if (index === selected) {\n      return /*#__PURE__*/React.createElement(NavBarItemMain, {\n        onClick: onClick\n      }, title);\n    } else {\n      return /*#__PURE__*/React.createElement(NavBarItem, {\n        onClick: onClick\n      }, title);\n    }\n  }))));\n};\n\n_s(Navbar, \"/bQXAAZuLKKIvUEWHdJe4zO/RzA=\", false, function () {\n  return [useBreakpoint];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/insanity/Documents/MasterSeats/masterseats-redone/client/src/areas/Navbar.tsx"],"names":["React","useEffect","useState","StyledHeader","MenuLogoContainer","LogoBackground","MenuStyled","NavBarItemMain","NavBarItem","OpenPage","ScreenSize","Grid","_","useBreakpoint","NAV_OPTIONS","title","onClick","DASHBOARD_NAV_OPTIONS","Navbar","props","selected","isDashboard","isAtTop","setIsAtTop","screens","screenSize","setScreenSize","undefined","Object","entries","filter","screen","map","console","log","handleScroll","currentScrollY","window","scrollY","addEventListener","passive","removeEventListener","backgroundColor","visibility","opacity","require","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {StyledHeader, MenuLogoContainer, LogoBackground, MenuStyled, NavBarItemMain, NavBarItem} from './Navbar.styled'\nimport OpenPage from './OpenPage'\nimport {ScreenSize} from '../../model'\nimport {Grid} from 'antd'\nimport _ from 'lodash'\n\nconst {useBreakpoint} = Grid\n\nconst NAV_OPTIONS: {title: string, onClick: () => void}[] = [\n    {title: 'Home', onClick: () => OpenPage('/')},\n    {title: 'Login', onClick: () => OpenPage('/login')},\n    {title: 'Sign Up', onClick: () => OpenPage('/register')},\n]\n\nconst DASHBOARD_NAV_OPTIONS: {title: string, onClick: () => void}[] = [\n    {title: 'Dashboard', onClick: () => OpenPage('/dashboard')},\n    {title: 'Log Out', onClick: () => OpenPage('/')}\n] \n\ninterface NavbarProps {\n    selected: number\n    isDashboard?: boolean\n}\n\nconst Navbar: React.FC<NavbarProps> = (props) => {\n    const {selected, isDashboard} = props\n    const [isAtTop, setIsAtTop] = useState(true);\n    const screens = useBreakpoint()\n    const [screenSize, setScreenSize] = useState<ScreenSize>(undefined)\n    \n    useEffect(() => {\n        Object.entries(screens)\n        .filter(screen => !!screen[1])\n        .map(screen => {\n            console.log(screen)\n            if (screen[0] !== ScreenSize[screenSize]) {\n                setScreenSize(ScreenSize[screen[0]])\n            }\n        })\n    }, [screens])\n  \n    useEffect(() => {\n      const handleScroll = () => {\n        const currentScrollY = window.scrollY;\n        if (currentScrollY == 0) {\n            setIsAtTop(true);\n        }\n        if (currentScrollY > 0) {\n            setIsAtTop(false);\n        }\n      };\n  \n      window.addEventListener(\"scroll\", handleScroll, { passive: true });\n  \n      return () => window.removeEventListener(\"scroll\", handleScroll);\n    }, [isAtTop]);\n\n    return (\n        <StyledHeader style={{backgroundColor: isAtTop ? '#FFCB05' : 'rgba(255,255,255,0.85)'}}>\n            <MenuLogoContainer>\n                {!isDashboard || isDashboard === undefined || screenSize == 0 ? \n                    <LogoBackground style={{visibility: isAtTop ? 'hidden' : 'visible', opacity: isAtTop ? 0 : 1}} href={'/'}>\n                        <img height={42} src={require('../../assets/images/logo/logo.png')} alt={\"MasterSeats Logo\"}/>\n                    </LogoBackground>\n                : null}\n                \n                <MenuStyled>\n                    {_.map(!isDashboard || isDashboard === undefined ? NAV_OPTIONS : DASHBOARD_NAV_OPTIONS, ({title, onClick}, index) => {\n                        if (index === selected) {\n                            return (\n                                    <NavBarItemMain onClick={onClick}>\n                                        {title}\n                                    </NavBarItemMain>\n                            )\n                        } else {\n                            return (\n                                    <NavBarItem onClick={onClick}>\n                                        {title}\n                                    </NavBarItem>\n                            )\n                        }\n                    })}\n                </MenuStyled>\n            </MenuLogoContainer>\n        </StyledHeader>\n    )\n}\n\nexport default Navbar"]},"metadata":{},"sourceType":"module"}