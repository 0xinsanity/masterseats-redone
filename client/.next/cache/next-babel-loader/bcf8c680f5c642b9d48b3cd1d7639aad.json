{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { Row, Col, Grid } from 'antd';\nimport { ScreenSize } from '../../model';\nconst {\n  useBreakpoint\n} = Grid;\n\nconst Page = props => {\n  const screens = useBreakpoint();\n  const [screenSize, setScreenSize] = useState(undefined);\n  useEffect(() => {\n    Object.entries(screens).filter(screen => !!screen[1]).map(screen => {\n      if (screen[0] !== ScreenSize[screenSize]) {\n        setScreenSize(ScreenSize[screen[0]]);\n      }\n    });\n  }, [screens]);\n  return /*#__PURE__*/React.createElement(Row, {\n    style: props.style\n  }, screenSize === 0 ? /*#__PURE__*/React.createElement(Col, {\n    style: props.style,\n    span: 24\n  }, props.children) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n    span: 4\n  }), /*#__PURE__*/React.createElement(Col, {\n    style: props.style,\n    span: 16\n  }, props.children), /*#__PURE__*/React.createElement(Col, {\n    span: 4\n  })));\n};\n\nexport default Page;","map":{"version":3,"sources":["/Users/insanity/Documents/MasterSeats/masterseats-redone/client/src/components/Page.tsx"],"names":["React","useState","useEffect","Row","Col","Grid","ScreenSize","useBreakpoint","Page","props","screens","screenSize","setScreenSize","undefined","Object","entries","filter","screen","map","style","children"],"mappings":"AAAA,OAAOA,KAAP,IAAyCC,QAAzC,EAAmDC,SAAnD,QAAmE,OAAnE;AACA,SAAQC,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,QAA6B,MAA7B;AACA,SAAQC,UAAR,QAAyB,aAAzB;AACA,MAAM;AAACC,EAAAA;AAAD,IAAkBF,IAAxB;;AAOA,MAAMG,IAAyB,GAAIC,KAAD,IAAW;AACzC,QAAMC,OAAO,GAAGH,aAAa,EAA7B;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAaY,SAAb,CAA5C;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,MAAM,CAACC,OAAP,CAAeL,OAAf,EACCM,MADD,CACQC,MAAM,IAAI,CAAC,CAACA,MAAM,CAAC,CAAD,CAD1B,EAECC,GAFD,CAEKD,MAAM,IAAI;AACX,UAAIA,MAAM,CAAC,CAAD,CAAN,KAAcX,UAAU,CAACK,UAAD,CAA5B,EAA0C;AACtCC,QAAAA,aAAa,CAACN,UAAU,CAACW,MAAM,CAAC,CAAD,CAAP,CAAX,CAAb;AACH;AACJ,KAND;AAOH,GARQ,EAQN,CAACP,OAAD,CARM,CAAT;AASA,sBACI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAED,KAAK,CAACU;AAAlB,KACKR,UAAU,KAAK,CAAf,gBACG,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAEF,KAAK,CAACU,KAAlB;AAAyB,IAAA,IAAI,EAAE;AAA/B,KACKV,KAAK,CAACW,QADX,CADH,gBAKD,uDACI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE;AAAX,IADJ,eAEI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAEX,KAAK,CAACU,KAAlB;AAAyB,IAAA,IAAI,EAAE;AAA/B,KACKV,KAAK,CAACW,QADX,CAFJ,eAKI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE;AAAX,IALJ,CANJ,CADJ;AAiBH,CA9BD;;AAgCA,eAAeZ,IAAf","sourcesContent":["import React, {CSSProperties, ReactNode, useState, useEffect} from 'react'\nimport {Row, Col, Grid} from 'antd'\nimport {ScreenSize} from '../../model'\nconst {useBreakpoint} = Grid\n\ninterface PageProps {\n    style: CSSProperties\n    children?: ReactNode\n}\n\nconst Page: React.FC<PageProps> = (props) => {\n    const screens = useBreakpoint()\n    const [screenSize, setScreenSize] = useState<ScreenSize>(undefined)\n    \n    useEffect(() => {\n        Object.entries(screens)\n        .filter(screen => !!screen[1])\n        .map(screen => {\n            if (screen[0] !== ScreenSize[screenSize]) {\n                setScreenSize(ScreenSize[screen[0]])\n            }\n        })\n    }, [screens])\n    return (\n        <Row style={props.style}>\n            {screenSize === 0 ? \n                <Col style={props.style} span={24}>\n                    {props.children}\n                </Col>\n            : \n            <>\n                <Col span={4}/>\n                <Col style={props.style} span={16}>\n                    {props.children}\n                </Col>\n                <Col span={4}/>\n            </>\n            }\n        </Row>\n    )\n}\n\nexport default Page"]},"metadata":{},"sourceType":"module"}