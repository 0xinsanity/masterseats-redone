{"ast":null,"code":"import React, { useContext } from 'react';\nimport ResetForm from '../LoginCard/ResetForm';\nimport { UserContext } from '../../lib/UserContext';\nimport { message, Button, Card } from 'antd';\nimport OpenPage from '../../areas/OpenPage';\nimport Navbar from '../Navbar';\nimport { OuterContainer } from '../Card.styled';\nimport Page from '../../components/Page';\nimport BackgroundPolygons from '../../components/BackgroundPolygons';\nimport styled from 'styled-components';\nconst ResetContainer = styled.div`\n`;\n\nconst Profile = () => {\n  const {\n    api\n  } = useContext(UserContext);\n\n  const resetPassword = async body_change => {\n    if (body_change.new_password !== body_change.repeat_password) {\n      message.error(\"Your new password is not the same as your repeated password.\");\n      return;\n    }\n\n    try {\n      await api.changePasswordFromProfile({\n        new_password: body_change.new_password\n      });\n      message.success(\"Your password has been changed. Please login with your new password.\");\n    } catch (err) {\n      message.error(\"There was a problem verifying your account. Please contact us.\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(OuterContainer, null, /*#__PURE__*/React.createElement(Navbar, {\n    isDashboard: true,\n    isLoggedIn: true,\n    selected: 1\n  }), /*#__PURE__*/React.createElement(BackgroundPolygons, null), /*#__PURE__*/React.createElement(Page, null, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      marginBottom: 50,\n      padding: 60,\n      flexDirection: 'column',\n      display: 'flex',\n      alignItems: 'center'\n    }\n  }, /*#__PURE__*/React.createElement(ResetContainer, null, /*#__PURE__*/React.createElement(ResetForm, {\n    onFinish: resetPassword\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      localStorage.setItem('email', '');\n      localStorage.setItem('password', '');\n      OpenPage('/');\n    }\n  }, \"Log out\"))));\n};\n\nexport default Profile;","map":{"version":3,"sources":["/Users/insanity/Documents/MasterSeats/new/client/src/areas/Profile/index.tsx"],"names":["React","useContext","ResetForm","UserContext","message","Button","Card","OpenPage","Navbar","OuterContainer","Page","BackgroundPolygons","styled","ResetContainer","div","Profile","api","resetPassword","body_change","new_password","repeat_password","error","changePasswordFromProfile","success","err","marginBottom","padding","flexDirection","display","alignItems","localStorage","setItem"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,SAAQC,OAAR,EAAiBC,MAAjB,EAAyBC,IAAzB,QAAoC,MAApC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAAQC,cAAR,QAA8B,gBAA9B;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,MAAMC,cAAc,GAAGD,MAAM,CAACE,GAAI;CAAlC;;AAGA,MAAMC,OAAiB,GAAG,MAAM;AAC5B,QAAM;AAACC,IAAAA;AAAD,MAAQf,UAAU,CAACE,WAAD,CAAxB;;AAEA,QAAMc,aAAa,GAAG,MAAOC,WAAP,IAAuB;AACzC,QAAIA,WAAW,CAACC,YAAZ,KAA6BD,WAAW,CAACE,eAA7C,EAA8D;AAC1DhB,MAAAA,OAAO,CAACiB,KAAR,CAAc,8DAAd;AACA;AACH;;AAED,QAAI;AACA,YAAML,GAAG,CAACM,yBAAJ,CAA8B;AAACH,QAAAA,YAAY,EAAED,WAAW,CAACC;AAA3B,OAA9B,CAAN;AACAf,MAAAA,OAAO,CAACmB,OAAR,CAAgB,sEAAhB;AACH,KAHD,CAGE,OAAOC,GAAP,EAAY;AACVpB,MAAAA,OAAO,CAACiB,KAAR,CAAc,gEAAd;AACH;AACJ,GAZD;;AAcA,sBACI,oBAAC,cAAD,qBACI,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,IAArB;AAA2B,IAAA,UAAU,EAAE,IAAvC;AAA6C,IAAA,QAAQ,EAAE;AAAvD,IADJ,eAEI,oBAAC,kBAAD,OAFJ,eAGI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACI,MAAAA,YAAY,EAAE,EAAf;AAAmBC,MAAAA,OAAO,EAAE,EAA5B;AAAgCC,MAAAA,aAAa,EAAE,QAA/C;AAAyDC,MAAAA,OAAO,EAAE,MAAlE;AAA0EC,MAAAA,UAAU,EAAE;AAAtF;AAAb,kBACI,oBAAC,cAAD,qBACI,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAEZ;AAArB,IADJ,CADJ,eAII,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAM;AACnBa,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,EAA9B;AACAD,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,EAAjC;AACAxB,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACH;AAJD,eAJJ,CADJ,CAHJ,CADJ;AAkBH,CAnCD;;AAqCA,eAAeQ,OAAf","sourcesContent":["import React, {useContext} from 'react'\nimport {PageDashboard} from '../PageUniversal'\nimport ResetForm from '../LoginCard/ResetForm'\nimport {UserContext} from '../../lib/UserContext'\nimport {message, Button, Card} from 'antd'\nimport OpenPage from '../../areas/OpenPage'\nimport Navbar from '../Navbar'\nimport {OuterContainer } from '../Card.styled'\nimport Page from '../../components/Page'\nimport BackgroundPolygons from '../../components/BackgroundPolygons'\nimport styled from 'styled-components'\n\n\nconst ResetContainer = styled.div`\n`\n\nconst Profile: React.FC = () => {\n    const {api} = useContext(UserContext)\n    \n    const resetPassword = async (body_change) => {\n        if (body_change.new_password !== body_change.repeat_password) {\n            message.error(\"Your new password is not the same as your repeated password.\")\n            return\n        }\n\n        try {\n            await api.changePasswordFromProfile({new_password: body_change.new_password})\n            message.success(\"Your password has been changed. Please login with your new password.\")\n        } catch (err) {\n            message.error(\"There was a problem verifying your account. Please contact us.\")\n        }\n    }\n\n    return (\n        <OuterContainer>\n            <Navbar isDashboard={true} isLoggedIn={true} selected={1}/>\n            <BackgroundPolygons/>\n            <Page>\n                <Card style={{marginBottom: 50, padding: 60, flexDirection: 'column', display: 'flex', alignItems: 'center'}}>\n                    <ResetContainer>\n                        <ResetForm onFinish={resetPassword}/>\n                    </ResetContainer>\n                    <Button onClick={() => {\n                        localStorage.setItem('email', '')\n                        localStorage.setItem('password', '')\n                        OpenPage('/')\n                    }}>Log out</Button>\n                </Card>\n            </Page>\n        </OuterContainer>\n    )\n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}