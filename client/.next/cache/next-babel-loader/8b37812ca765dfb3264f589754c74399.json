{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport TicketWallet from '../src/areas/TicketWallet';\nimport { UserContext } from '../src/lib/UserContext';\nimport { seeIfLogin } from '../src/lib';\nimport Loading from '../src/components/Loading';\nimport { useRouter } from 'next/router';\n\nconst Selling = () => {\n  _s();\n\n  const {\n    api,\n    setToken\n  } = useContext(UserContext);\n  const [isLoading, setIsLoading] = useState(true);\n  const [defaultValue, setDefaultValue] = useState(\"1\");\n  const [openModal, setOpenModal] = useState(false);\n  const router = useRouter();\n  useEffect(() => {\n    if (router.query.pending !== undefined) {\n      setDefaultValue(\"2\");\n    } else if (router.query.completed !== undefined) {\n      setDefaultValue(\"3\");\n    } else if (router.query.fromverify !== undefined) {\n      setOpenModal(true);\n    }\n  }, [router.query]);\n  useEffect(() => {\n    seeIfLogin(api, setToken).then(() => {\n      setIsLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Head, null, /*#__PURE__*/React.createElement(\"title\", null, \"MasterSeats \\u2022 Selling\")), isLoading ? /*#__PURE__*/React.createElement(Loading, null) : /*#__PURE__*/React.createElement(TicketWallet, {\n    defaultValue: defaultValue,\n    setOpenModal: visible => setOpenModal(visible),\n    openModal: openModal\n  }));\n};\n\n_s(Selling, \"vCYW+/hv5fRyxV0yT8Rx1eD11mQ=\", false, function () {\n  return [useRouter];\n});\n\n_c = Selling;\nexport default Selling;\n\nvar _c;\n\n$RefreshReg$(_c, \"Selling\");","map":{"version":3,"sources":["/Users/insanity/Documents/MasterSeats/new/client/pages/ticketwallet.tsx"],"names":["React","useContext","useState","useEffect","Head","TicketWallet","UserContext","seeIfLogin","Loading","useRouter","Selling","api","setToken","isLoading","setIsLoading","defaultValue","setDefaultValue","openModal","setOpenModal","router","query","pending","undefined","completed","fromverify","then","visible"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,EAAqCC,SAArC,QAAqD,OAArD;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAAQC,UAAR,QAAyB,YAAzB;AAGA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAAQC,SAAR,QAAwB,aAAxB;;AAEA,MAAMC,OAAiB,GAAG,MAAM;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAoBX,UAAU,CAACK,WAAD,CAApC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,GAAD,CAAhD;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMiB,MAAM,GAAGV,SAAS,EAAxB;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgB,MAAM,CAACC,KAAP,CAAaC,OAAb,KAAyBC,SAA7B,EAAwC;AACpCN,MAAAA,eAAe,CAAC,GAAD,CAAf;AACH,KAFD,MAEO,IAAIG,MAAM,CAACC,KAAP,CAAaG,SAAb,KAA2BD,SAA/B,EAA0C;AAC7CN,MAAAA,eAAe,CAAC,GAAD,CAAf;AACH,KAFM,MAEA,IAAIG,MAAM,CAACC,KAAP,CAAaI,UAAb,KAA4BF,SAAhC,EAA2C;AAC9CJ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;AACJ,GARQ,EAQN,CAACC,MAAM,CAACC,KAAR,CARM,CAAT;AAUAjB,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,UAAU,CAACI,GAAD,EAAMC,QAAN,CAAV,CAA0Ba,IAA1B,CAA+B,MAAM;AACjCX,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI,uDACI,oBAAC,IAAD,qBACI,gEADJ,CADJ,EAIKD,SAAS,gBAAG,oBAAC,OAAD,OAAH,gBAAgB,oBAAC,YAAD;AAAc,IAAA,YAAY,EAAEE,YAA5B;AAA0C,IAAA,YAAY,EAAGW,OAAD,IAAaR,YAAY,CAACQ,OAAD,CAAjF;AAA4F,IAAA,SAAS,EAAET;AAAvG,IAJ9B,CADJ;AAQH,CA/BD;;GAAMP,O;UAKaD,S;;;KALbC,O;AAiCN,eAAeA,OAAf","sourcesContent":["import React, {useContext, useState, useEffect} from 'react'\nimport {Spin} from 'antd'\nimport Head from 'next/head'\nimport TicketWallet from '../src/areas/TicketWallet'\nimport { UserContext } from '../src/lib/UserContext';\nimport {seeIfLogin} from '../src/lib'\nimport OpenPage from '../src/areas/Universal/OpenPage'\nimport styled from 'styled-components'\nimport Loading from '../src/components/Loading';\nimport {useRouter} from 'next/router'\n\nconst Selling: React.FC = () => {\n    const { api, setToken } = useContext(UserContext)\n    const [isLoading, setIsLoading] = useState(true)\n    const [defaultValue, setDefaultValue] = useState(\"1\")\n    const [openModal, setOpenModal] = useState(false)\n    const router = useRouter()\n\n    useEffect(() => {\n        if (router.query.pending !== undefined) {\n            setDefaultValue(\"2\")\n        } else if (router.query.completed !== undefined) {\n            setDefaultValue(\"3\")\n        } else if (router.query.fromverify !== undefined) {\n            setOpenModal(true)\n        }\n    }, [router.query])\n\n    useEffect(() => {\n        seeIfLogin(api, setToken).then(() => {\n            setIsLoading(false)\n        })\n    }, [])\n\n    return (\n        <>\n            <Head>\n                <title>MasterSeats â€¢ Selling</title>\n            </Head>\n            {isLoading ? <Loading/> : <TicketWallet defaultValue={defaultValue} setOpenModal={(visible) => setOpenModal(visible)} openModal={openModal}/>}\n        </>\n    );\n};\n\nexport default Selling;"]},"metadata":{},"sourceType":"module"}