{"ast":null,"code":"import React, { useContext, useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport { UserContext } from '../src/lib/UserContext';\nimport { useRouter } from 'next/router';\nimport ThankYouComponent from '../src/areas/ThankYou';\nimport { seeIfLogin } from '../lib';\n\nconst ThankYou = () => {\n  const {\n    currentUser\n  } = useContext(UserContext);\n  const router = useRouter();\n  const [message, setMessage] = useState('Thank you!');\n  const [isEmail, setIsEmail] = useState(false);\n  useEffect(() => {\n    if (currentUser === null || currentUser === undefined) {\n      return;\n    }\n\n    if (router.query.email !== undefined) {\n      setIsEmail(true);\n      setMessage('Thank you! We know email confirmations suck, but we do it for you –\\nto make sure everyone on the platform is a student.\\nPlease check your email for a confirmation link.');\n    } else if (router.query.post !== undefined) {\n      setMessage(`Thanks for listing your ticket for ${router.query.post}, ${currentUser.first_name}!\\nWe\\'re looking for a buyer right now.\\nWe\\'ll email you when we\\'ve found the perfect buyer.\\nHang tight!`);\n    } else if (router.query.purchase !== undefined) {\n      setMessage(`Thanks for purchasing your ticket for ${router.query.purchase}, ${currentUser.first_name}!\\nWe\\'re contacting the seller right now.\\nWe\\'ll email you when the seller confirms that the ticket has been transferred.\\nHang tight!`);\n    }\n  }, [router.query]);\n  useEffect(() => {\n    seeIfLogin(api, setToken).then(() => {\n      setIsLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Head, null, /*#__PURE__*/React.createElement(\"title\", null, \"MasterSeats \\u2022 Thank You\")), /*#__PURE__*/React.createElement(ThankYouComponent, {\n    message: message,\n    isEmail: isEmail\n  }));\n};\n\nexport default ThankYou;","map":{"version":3,"sources":["/Users/insanity/Documents/MasterSeats/new/client/pages/thankyou.tsx"],"names":["React","useContext","useState","useEffect","Head","UserContext","useRouter","ThankYouComponent","seeIfLogin","ThankYou","currentUser","router","message","setMessage","isEmail","setIsEmail","undefined","query","email","post","first_name","purchase","api","setToken","then","setIsLoading"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,EAAqCC,SAArC,QAAqD,OAArD;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AAGA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,OAAOC,iBAAP,MAA8B,uBAA9B;AACA,SAAQC,UAAR,QAAyB,QAAzB;;AAEA,MAAMC,QAAkB,GAAG,MAAM;AAC7B,QAAM;AAACC,IAAAA;AAAD,MAAgBT,UAAU,CAACI,WAAD,CAAhC;AACA,QAAMM,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,YAAD,CAAtC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAKM,SAA5C,EAAuD;AACnD;AACH;;AACD,QAAIL,MAAM,CAACM,KAAP,CAAaC,KAAb,KAAuBF,SAA3B,EAAsC;AAClCD,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,MAAAA,UAAU,CAAC,4KAAD,CAAV;AACH,KAHD,MAGO,IAAIF,MAAM,CAACM,KAAP,CAAaE,IAAb,KAAsBH,SAA1B,EAAqC;AACxCH,MAAAA,UAAU,CAAE,sCAAqCF,MAAM,CAACM,KAAP,CAAaE,IAAK,KAAIT,WAAW,CAACU,UAAW,8GAApF,CAAV;AACH,KAFM,MAEA,IAAIT,MAAM,CAACM,KAAP,CAAaI,QAAb,KAA0BL,SAA9B,EAAyC;AAC5CH,MAAAA,UAAU,CAAE,yCAAwCF,MAAM,CAACM,KAAP,CAAaI,QAAS,KAAIX,WAAW,CAACU,UAAW,0IAA3F,CAAV;AACH;AACJ,GAZQ,EAYN,CAACT,MAAM,CAACM,KAAR,CAZM,CAAT;AAcAd,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,UAAU,CAACc,GAAD,EAAMC,QAAN,CAAV,CAA0BC,IAA1B,CAA+B,MAAM;AACjCC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI,uDACI,oBAAC,IAAD,qBACI,kEADJ,CADJ,eAII,oBAAC,iBAAD;AAAmB,IAAA,OAAO,EAAEb,OAA5B;AAAqC,IAAA,OAAO,EAAEE;AAA9C,IAJJ,CADJ;AAQH,CAlCD;;AAoCA,eAAeL,QAAf","sourcesContent":["import React, {useContext, useState, useEffect} from 'react'\nimport {Button, Form, Input, Row, Radio, Card, message} from 'antd'\nimport Head from 'next/head'\nimport LoginBackground from '../src/components/LoginBackground'\nimport ForgotPasswordComponent from '../src/areas/LoginCard/ForgotPasswordComponent'\nimport {UserContext} from '../src/lib/UserContext'\nimport {useRouter} from 'next/router'\nimport ThankYouComponent from '../src/areas/ThankYou'\nimport {seeIfLogin} from '../lib'\n\nconst ThankYou: React.FC = () => {\n    const {currentUser} = useContext(UserContext) \n    const router = useRouter()\n    const [message, setMessage] = useState('Thank you!')\n    const [isEmail, setIsEmail] = useState(false)\n\n    useEffect(() => {\n        if (currentUser === null || currentUser === undefined) {\n            return\n        }\n        if (router.query.email !== undefined) {\n            setIsEmail(true)\n            setMessage('Thank you! We know email confirmations suck, but we do it for you –\\nto make sure everyone on the platform is a student.\\nPlease check your email for a confirmation link.')\n        } else if (router.query.post !== undefined) {\n            setMessage(`Thanks for listing your ticket for ${router.query.post}, ${currentUser.first_name}!\\nWe\\'re looking for a buyer right now.\\nWe\\'ll email you when we\\'ve found the perfect buyer.\\nHang tight!`)\n        } else if (router.query.purchase !== undefined) {\n            setMessage(`Thanks for purchasing your ticket for ${router.query.purchase}, ${currentUser.first_name}!\\nWe\\'re contacting the seller right now.\\nWe\\'ll email you when the seller confirms that the ticket has been transferred.\\nHang tight!`)\n        }\n    }, [router.query])\n\n    useEffect(() => {\n        seeIfLogin(api, setToken).then(() => {\n            setIsLoading(false)\n        })\n    }, [])\n\n    return (\n        <>\n            <Head>\n                <title>MasterSeats • Thank You</title>\n            </Head>\n            <ThankYouComponent message={message} isEmail={isEmail} />\n        </>\n    );\n};\n\nexport default ThankYou;"]},"metadata":{},"sourceType":"module"}