{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useContext, useState } from 'react';\nimport { PageDashboard } from '../Universal/PageUniversal';\nimport SellSection from './Sections/Sell';\nimport PendingSection from './Sections/Pending';\nimport CompletedSection from './Sections/Completed';\nimport { UserContext } from '../../lib/UserContext';\nimport { Tabs } from 'antd';\nimport OpenPage from '../Universal/OpenPage';\nimport { serialize } from '../../lib';\nconst {\n  TabPane\n} = Tabs;\n\nconst TicketWallet = props => {\n  _s();\n\n  const {\n    defaultValue,\n    setOpenModal,\n    openModal\n  } = props;\n  const {\n    api,\n    currentUser\n  } = useContext(UserContext);\n  const [unsoldWallet, setUnsoldWallet] = useState([]);\n  const [pendingWalletSeller, setPendingWalletSeller] = useState([]);\n  const [pendingWalletBuyer, setPendingWalletBuyer] = useState([]);\n  const [completedWallet, setCompletedWallet] = useState([]);\n  useEffect(() => {\n    if (currentUser !== null) {\n      getUnsoldTickets();\n      getPendingTicketsBuyer();\n      getCompletedTickets();\n      getPendingTicketsSeller();\n    }\n  }, []);\n\n  const getPendingTicketsBuyer = async () => {\n    const body = await api.getPendingTicketsBuyer();\n    setPendingWalletBuyer(body.data);\n  };\n\n  const getPendingTicketsSeller = async () => {\n    const body = await api.getPendingTicketsSeller();\n    setPendingWalletSeller(body.data);\n  };\n\n  const getCompletedTickets = async () => {\n    const body = await api.getCompletedTickets();\n    setCompletedWallet(body.data);\n  };\n\n  const getUnsoldTickets = async () => {\n    const body = await api.getTicketWallet();\n    setUnsoldWallet(body.data);\n  };\n\n  const postTicket = async ticketBody => {\n    await api.postTicket(ticketBody);\n    localStorage.setItem('game', '');\n    localStorage.setItem('section', '');\n    localStorage.setItem('price', '');\n    await getUnsoldTickets();\n    console.log(serialize({\n      'post': ticketBody.game\n    }));\n    OpenPage('/thankyou?' + serialize({\n      'post': ticketBody.game\n    }));\n  };\n\n  const removeTicket = async ticketId => {\n    await api.removeTicket({\n      id: ticketId\n    });\n    await getUnsoldTickets();\n  };\n\n  const confirmTransferSeller = async ticket_id => {\n    await api.transferredTicketSellerConfirmation({\n      ticket_id\n    });\n    await getPendingTicketsSeller();\n    await getCompletedTickets();\n  };\n\n  const confirmTransferBuyer = async ticket_id => {\n    await api.transferredTicketBuyerConfirmation({\n      ticket_id\n    });\n    await getPendingTicketsBuyer();\n    await getCompletedTickets();\n  };\n\n  const refundTicket = async ticket_id => {\n    await api.refundTicket({\n      id: ticket_id\n    });\n    await getPendingTicketsBuyer();\n  };\n\n  return /*#__PURE__*/React.createElement(PageDashboard, {\n    isLoggedIn: currentUser === null ? false : true,\n    selected: -1\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    style: {\n      borderBottom: 0,\n      fontFamily: 'Mark Pro Bold',\n      textAlign: 'center'\n    },\n    defaultActiveKey: defaultValue,\n    centered: true,\n    size: \"large\"\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Not Sold\",\n    key: \"1\"\n  }, /*#__PURE__*/React.createElement(SellSection, {\n    visible: openModal,\n    setVisibility: setOpenModal,\n    tickets: unsoldWallet,\n    postTicket: postTicket,\n    removeTicket: removeTicket\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Pending\",\n    key: \"2\"\n  }, /*#__PURE__*/React.createElement(PendingSection, {\n    pendingSold: pendingWalletSeller,\n    pendingBuy: pendingWalletBuyer,\n    confirmTransferSeller: confirmTransferSeller,\n    confirmTransferBuyer: confirmTransferBuyer,\n    refundTicket: refundTicket\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Completed\",\n    key: \"3\"\n  }, /*#__PURE__*/React.createElement(CompletedSection, {\n    tickets: completedWallet\n  }))));\n};\n\n_s(TicketWallet, \"PWkMEK+7iTs6hu6f+oOYGUSiYPQ=\");\n\n_c = TicketWallet;\nexport default TicketWallet;\n\nvar _c;\n\n$RefreshReg$(_c, \"TicketWallet\");","map":{"version":3,"sources":["/Users/insanity/Documents/MasterSeats/new/client/src/areas/TicketWallet/index.tsx"],"names":["React","useEffect","useContext","useState","PageDashboard","SellSection","PendingSection","CompletedSection","UserContext","Tabs","OpenPage","serialize","TabPane","TicketWallet","props","defaultValue","setOpenModal","openModal","api","currentUser","unsoldWallet","setUnsoldWallet","pendingWalletSeller","setPendingWalletSeller","pendingWalletBuyer","setPendingWalletBuyer","completedWallet","setCompletedWallet","getUnsoldTickets","getPendingTicketsBuyer","getCompletedTickets","getPendingTicketsSeller","body","data","getTicketWallet","postTicket","ticketBody","localStorage","setItem","console","log","game","removeTicket","ticketId","id","confirmTransferSeller","ticket_id","transferredTicketSellerConfirmation","confirmTransferBuyer","transferredTicketBuyerConfirmation","refundTicket","borderBottom","fontFamily","textAlign"],"mappings":"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","sourcesContent":["import React, {useEffect, useContext, useState} from 'react'\nimport styled from 'styled-components'\nimport {PageDashboard} from '../Universal/PageUniversal'\nimport SellSection from './Sections/Sell'\nimport PendingSection from './Sections/Pending'\nimport CompletedSection from './Sections/Completed'\nimport {UserContext} from '../../lib/UserContext'\nimport {Ticket, PostTicketBody} from '../../../api'\nimport { Tabs } from 'antd';\nimport OpenPage from '../Universal/OpenPage'\nimport { serialize } from '../../lib'\n\nconst { TabPane } = Tabs;\n\ninterface TicketWalletProps {\n    setOpenModal: (visible: boolean) => void,\n    openModal: boolean,\n    defaultValue: string\n}\n\nconst TicketWallet: React.FC<TicketWalletProps> = props => {\n    const {defaultValue, setOpenModal, openModal} = props\n    const {api, currentUser} = useContext(UserContext)\n    const [unsoldWallet, setUnsoldWallet] = useState<Ticket[]>([])\n    const [pendingWalletSeller, setPendingWalletSeller] = useState<Ticket[]>([])\n    const [pendingWalletBuyer, setPendingWalletBuyer] = useState<Ticket[]>([])\n    const [completedWallet, setCompletedWallet] = useState<Ticket[]>([])\n\n    useEffect(() => {\n        if (currentUser !== null) {\n            getUnsoldTickets()\n            getPendingTicketsBuyer()\n            getCompletedTickets()\n            getPendingTicketsSeller()\n        }\n    }, [])\n\n    const getPendingTicketsBuyer = async () => {\n        const body = await api.getPendingTicketsBuyer()\n        setPendingWalletBuyer(body.data)\n    }\n\n    const getPendingTicketsSeller = async () => {\n        const body = await api.getPendingTicketsSeller()\n        setPendingWalletSeller(body.data)\n    }\n\n    const getCompletedTickets = async () => {\n        const body = await api.getCompletedTickets()\n        setCompletedWallet(body.data)\n    }\n\n    const getUnsoldTickets = async () => {\n        const body = await api.getTicketWallet()\n        setUnsoldWallet(body.data)\n    }\n\n    const postTicket = async (ticketBody: PostTicketBody) => {\n        await api.postTicket(ticketBody)\n        localStorage.setItem('game', '')\n        localStorage.setItem('section', '')\n        localStorage.setItem('price', '')\n        await getUnsoldTickets()\n        console.log(serialize({'post': ticketBody.game}))\n        OpenPage('/thankyou?' + serialize({'post': ticketBody.game}))\n    }\n\n    const removeTicket = async (ticketId: string) => {\n        await api.removeTicket({id: ticketId})\n        await getUnsoldTickets()\n    }\n\n    const confirmTransferSeller = async (ticket_id: string) => {\n        await api.transferredTicketSellerConfirmation({ticket_id})\n        await getPendingTicketsSeller()\n        await getCompletedTickets()\n    }\n\n    const confirmTransferBuyer = async (ticket_id: string) => {\n        await api.transferredTicketBuyerConfirmation({ticket_id})\n        await getPendingTicketsBuyer()\n        await getCompletedTickets()\n    }\n\n    const refundTicket = async (ticket_id: string) => {\n        await api.refundTicket({id: ticket_id})\n        await getPendingTicketsBuyer()\n    }\n\n    return (\n        <PageDashboard isLoggedIn={currentUser === null ? false : true} selected={-1}>\n            <Tabs style={{\n                borderBottom: 0,\n                fontFamily: 'Mark Pro Bold',\n                textAlign: 'center'\n            }} defaultActiveKey={defaultValue} centered={true} size=\"large\">\n                <TabPane tab=\"Not Sold\" key=\"1\">\n                        <SellSection \n                                    visible={openModal}\n                                    setVisibility={setOpenModal}\n                                    tickets={unsoldWallet} \n                                    postTicket={postTicket} \n                                    removeTicket={removeTicket}/>\n                </TabPane>\n                <TabPane tab=\"Pending\" key=\"2\">\n                    <PendingSection pendingSold={pendingWalletSeller} \n                                    pendingBuy={pendingWalletBuyer} \n                                    confirmTransferSeller={confirmTransferSeller}\n                                    confirmTransferBuyer={confirmTransferBuyer}\n                                    refundTicket={refundTicket}  />\n                </TabPane>\n                <TabPane tab=\"Completed\" key=\"3\">\n                    <CompletedSection tickets={completedWallet} />\n                </TabPane>\n            </Tabs>\n        </PageDashboard>\n    )\n}\n\nexport default TicketWallet"]},"metadata":{},"sourceType":"module"}