{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { StyledHeader, MenuLogoContainer, LogoBackground, MenuStyled, NavBarItemMain, NavBarItem } from './Navbar.styled';\nimport OpenPage from '../areas/OpenPage';\nimport _ from 'lodash';\nconst NAV_OPTIONS = [{\n  title: 'Home',\n  onClick: () => OpenPage('/')\n}, {\n  title: 'Login',\n  onClick: () => OpenPage('/login')\n}, {\n  title: 'Sign Up',\n  onClick: () => OpenPage('/register')\n}];\n\nconst Navbar = props => {\n  _s();\n\n  const {\n    selected\n  } = props;\n  const [isAtTop, setIsAtTop] = useState(true);\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY;\n\n      if (currentScrollY == 0) {\n        setIsAtTop(true);\n      }\n\n      if (currentScrollY > 0) {\n        setIsAtTop(false);\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll, {\n      passive: true\n    });\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, [isAtTop]);\n  return /*#__PURE__*/React.createElement(StyledHeader, {\n    style: {\n      backgroundColor: isAtTop ? '#FFCB05' : 'rgba(255,255,255,0.85)'\n    }\n  }, /*#__PURE__*/React.createElement(MenuLogoContainer, null, /*#__PURE__*/React.createElement(LogoBackground, {\n    style: {\n      visibility: isAtTop ? 'hidden' : 'visible',\n      opacity: isAtTop ? 0 : 1\n    },\n    href: '/'\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    height: 42,\n    src: require('../../assets/images/logo.png'),\n    alt: \"MasterSeats Logo\"\n  })), /*#__PURE__*/React.createElement(MenuStyled, null, _.map(NAV_OPTIONS, ({\n    title,\n    onClick\n  }, index) => {\n    if (index === selected) {\n      return /*#__PURE__*/React.createElement(NavBarItemMain, {\n        onClick: onClick\n      }, title);\n    } else {\n      return /*#__PURE__*/React.createElement(NavBarItem, {\n        onClick: onClick\n      }, title);\n    }\n  }))));\n};\n\n_s(Navbar, \"T927+dxq+VNi3A+IBjdztb73nkg=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/insanity/Documents/MasterSeats/masterseats-redone/client/src/components/Navbar.tsx"],"names":["React","useEffect","useState","StyledHeader","MenuLogoContainer","LogoBackground","MenuStyled","NavBarItemMain","NavBarItem","OpenPage","_","NAV_OPTIONS","title","onClick","Navbar","props","selected","isAtTop","setIsAtTop","handleScroll","currentScrollY","window","scrollY","addEventListener","passive","removeEventListener","backgroundColor","visibility","opacity","require","map","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,YAAR,EAAsBC,iBAAtB,EAAyCC,cAAzC,EAAyDC,UAAzD,EAAqEC,cAArE,EAAqFC,UAArF,QAAsG,iBAAtG;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,MAAMC,WAAmD,GAAG,CACxD;AAACC,EAAAA,KAAK,EAAE,MAAR;AAAgBC,EAAAA,OAAO,EAAE,MAAMJ,QAAQ,CAAC,GAAD;AAAvC,CADwD,EAExD;AAACG,EAAAA,KAAK,EAAE,OAAR;AAAiBC,EAAAA,OAAO,EAAE,MAAMJ,QAAQ,CAAC,QAAD;AAAxC,CAFwD,EAGxD;AAACG,EAAAA,KAAK,EAAE,SAAR;AAAmBC,EAAAA,OAAO,EAAE,MAAMJ,QAAQ,CAAC,WAAD;AAA1C,CAHwD,CAA5D;;AAUA,MAAMK,MAA6B,GAAIC,KAAD,IAAW;AAAA;;AAC7C,QAAM;AAACC,IAAAA;AAAD,MAAaD,KAAnB;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,YAAY,GAAG,MAAM;AACzB,YAAMC,cAAc,GAAGC,MAAM,CAACC,OAA9B;;AACA,UAAIF,cAAc,IAAI,CAAtB,EAAyB;AACrBF,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AACD,UAAIE,cAAc,GAAG,CAArB,EAAwB;AACpBF,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACF,KARD;;AAUAG,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCJ,YAAlC,EAAgD;AAAEK,MAAAA,OAAO,EAAE;AAAX,KAAhD;AAEA,WAAO,MAAMH,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCN,YAArC,CAAb;AACD,GAdQ,EAcN,CAACF,OAAD,CAdM,CAAT;AAgBA,sBACI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAACS,MAAAA,eAAe,EAAET,OAAO,GAAG,SAAH,GAAe;AAAxC;AAArB,kBACI,oBAAC,iBAAD,qBACI,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAE;AAACU,MAAAA,UAAU,EAAEV,OAAO,GAAG,QAAH,GAAc,SAAlC;AACCW,MAAAA,OAAO,EAAEX,OAAO,GAAG,CAAH,GAAO;AADxB,KAAvB;AAEyB,IAAA,IAAI,EAAE;AAF/B,kBAGI;AAAK,IAAA,MAAM,EAAE,EAAb;AAAiB,IAAA,GAAG,EAAEY,OAAO,CAAC,8BAAD,CAA7B;AAA+D,IAAA,GAAG,EAAE;AAApE,IAHJ,CADJ,eAMI,oBAAC,UAAD,QACKnB,CAAC,CAACoB,GAAF,CAAMnB,WAAN,EAAmB,CAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,EAAmBkB,KAAnB,KAA6B;AAC7C,QAAIA,KAAK,KAAKf,QAAd,EAAwB;AACpB,0BACQ,oBAAC,cAAD;AAAgB,QAAA,OAAO,EAAEH;AAAzB,SACKD,KADL,CADR;AAKH,KAND,MAMO;AACH,0BACQ,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAEC;AAArB,SACKD,KADL,CADR;AAKH;AACJ,GAdA,CADL,CANJ,CADJ,CADJ;AA4BH,CAhDD;;GAAME,M;;KAAAA,M;AAkDN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {StyledHeader, MenuLogoContainer, LogoBackground, MenuStyled, NavBarItemMain, NavBarItem} from './Navbar.styled'\nimport OpenPage from '../areas/OpenPage'\nimport _ from 'lodash'\n\nconst NAV_OPTIONS: {title: string, onClick: () => void}[] = [\n    {title: 'Home', onClick: () => OpenPage('/')},\n    {title: 'Login', onClick: () => OpenPage('/login')},\n    {title: 'Sign Up', onClick: () => OpenPage('/register')},\n]\n\ninterface NavbarProps {\n    selected: number\n}\n\nconst Navbar: React.FC<NavbarProps> = (props) => {\n    const {selected} = props\n    const [isAtTop, setIsAtTop] = useState(true);\n  \n    useEffect(() => {\n      const handleScroll = () => {\n        const currentScrollY = window.scrollY;\n        if (currentScrollY == 0) {\n            setIsAtTop(true);\n        }\n        if (currentScrollY > 0) {\n            setIsAtTop(false);\n        }\n      };\n  \n      window.addEventListener(\"scroll\", handleScroll, { passive: true });\n  \n      return () => window.removeEventListener(\"scroll\", handleScroll);\n    }, [isAtTop]);\n\n    return (\n        <StyledHeader style={{backgroundColor: isAtTop ? '#FFCB05' : 'rgba(255,255,255,0.85)'}}>\n            <MenuLogoContainer>\n                <LogoBackground style={{visibility: isAtTop ? 'hidden' : 'visible',\n                                        opacity: isAtTop ? 0 : 1}}\n                                         href={'/'}>\n                    <img height={42} src={require('../../assets/images/logo.png')} alt={\"MasterSeats Logo\"}/>\n                </LogoBackground>\n                <MenuStyled>\n                    {_.map(NAV_OPTIONS, ({title, onClick}, index) => {\n                        if (index === selected) {\n                            return (\n                                    <NavBarItemMain onClick={onClick}>\n                                        {title}\n                                    </NavBarItemMain>\n                            )\n                        } else {\n                            return (\n                                    <NavBarItem onClick={onClick}>\n                                        {title}\n                                    </NavBarItem>\n                            )\n                        }\n                    })}\n                </MenuStyled>\n            </MenuLogoContainer>\n        </StyledHeader>\n    )\n}\n\nexport default Navbar"]},"metadata":{},"sourceType":"module"}