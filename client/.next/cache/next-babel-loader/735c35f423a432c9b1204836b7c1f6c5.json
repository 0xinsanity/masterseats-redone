{"ast":null,"code":"import React, { useState } from 'react';\nimport { Form, Input, Row } from 'antd';\nimport { GenButton } from '../DashboardPage/DashboardPage.styled';\nimport { GameSelect, SectionSelect } from '../../components/SelectOptions';\n\nconst SellingForm = props => {\n  const {\n    onCancel,\n    postTicket\n  } = props;\n  const [gameValue, setGameValue] = useState(undefined);\n  const [sectionValue, setSectionValue] = useState(undefined);\n  const [form] = Form.useForm();\n\n  const onFinish = async user_info => {\n    await postTicket(user_info);\n    typeof onCancel === 'function' && onCancel();\n\n    if (localStorage.getItem('game') !== undefined) {\n      console.log('game: ' + localStorage.getItem('game'));\n      form.setFieldsValue({\n        game: localStorage.getItem('game'),\n        section: parseInt(localStorage.getItem('section')),\n        price: parseFloat(localStorage.getItem('price'))\n      });\n    } else {\n      form.setFieldsValue({\n        game: undefined,\n        section: undefined,\n        price: undefined\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    hideRequiredMark: true,\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Game\",\n    name: \"game\",\n    rules: [{\n      required: true,\n      message: 'The game is required'\n    }]\n  }, /*#__PURE__*/React.createElement(GameSelect, {\n    hasAllGames: false,\n    value: gameValue,\n    setValue: e => {\n      form.setFieldsValue({\n        game: e\n      });\n      setGameValue(e);\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Listing Price\",\n    name: \"price\",\n    rules: [{\n      required: true,\n      message: 'Listing Price is required'\n    }]\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"section\",\n    placeholder: \"25\",\n    prefix: \"$\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Section\",\n    name: \"section\",\n    rules: [{\n      required: true,\n      message: 'Section is required'\n    }]\n  }, /*#__PURE__*/React.createElement(SectionSelect, {\n    value: sectionValue,\n    setValue: e => {\n      form.setFieldsValue({\n        section: e\n      });\n      setSectionValue(e);\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, null, /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\"\n  }, /*#__PURE__*/React.createElement(GenButton, {\n    style: {\n      fontFamily: 'Mark Pro'\n    },\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, \"Post Ticket\"))));\n};\n\nexport default SellingForm;","map":{"version":3,"sources":["/Users/insanity/Documents/MasterSeats/new/client/src/areas/SellingPage/SellingForm.tsx"],"names":["React","useState","Form","Input","Row","GenButton","GameSelect","SectionSelect","SellingForm","props","onCancel","postTicket","gameValue","setGameValue","undefined","sectionValue","setSectionValue","form","useForm","onFinish","user_info","localStorage","getItem","console","log","setFieldsValue","game","section","parseInt","price","parseFloat","remember","required","message","e","fontFamily"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {Modal, Form, Input, Row} from 'antd'\nimport {GenButton} from '../DashboardPage/DashboardPage.styled'\nimport {GameSelect, SectionSelect} from '../../components/SelectOptions'\nimport {MichiganFootballGame, PostTicketBody} from '../../../api'\n\ninterface SellingFormProps {\n    onCancel?: () => void\n    postTicket: (ticketBody: PostTicketBody) => void\n}\n\nconst SellingForm: React.FC<SellingFormProps> = props => {\n    const {onCancel, postTicket} = props\n    const [gameValue, setGameValue] = useState<MichiganFootballGame>(undefined)\n    const [sectionValue, setSectionValue] = useState<number>(undefined)\n    const [form] = Form.useForm()\n\n    const onFinish = async (user_info) => {\n        await postTicket(user_info)\n        typeof onCancel === 'function' && onCancel()\n        if (localStorage.getItem('game') !== undefined) {\n            console.log('game: ' + localStorage.getItem('game'))\n            form.setFieldsValue({\n                game: localStorage.getItem('game'),\n                section: parseInt(localStorage.getItem('section')),\n                price: parseFloat(localStorage.getItem('price'))\n            })\n        } else {\n            form.setFieldsValue({\n                game: undefined,\n                section: undefined,\n                price: undefined\n            })\n        }\n    }\n\n    return (\n        <Form\n            form={form}\n            hideRequiredMark={true}\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n            >\n                <Form.Item\n                    label=\"Game\"\n                    name=\"game\"\n                    rules={[{ required: true, message: 'The game is required' }]}\n                >\n                    <GameSelect \n                        hasAllGames={false}\n                        value={gameValue} \n                        setValue={(e) => {\n                            form.setFieldsValue({game: e})\n                            setGameValue(e)\n                        }}/>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Listing Price\"\n                    name=\"price\"\n                    rules={[{ required: true, message: 'Listing Price is required' }]}\n                >\n                    <Input type=\"section\" placeholder=\"25\" prefix={\"$\"}/>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Section\"\n                    name=\"section\"\n                    rules={[{ required: true, message: 'Section is required' }]}\n                >\n                    <SectionSelect \n                        value={sectionValue} \n                        setValue={(e) => {\n                            form.setFieldsValue({section: e})\n                            setSectionValue(e)\n                        }}/>\n                </Form.Item>\n\n                <Form.Item>\n                    <Row justify=\"center\">\n                        <GenButton style={{fontFamily: 'Mark Pro'}} type=\"primary\" htmlType=\"submit\">\n                            Post Ticket\n                        </GenButton>\n                    </Row>\n                </Form.Item>\n            </Form>\n    )\n}\n\nexport default SellingForm"]},"metadata":{},"sourceType":"module"}