module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = require('../../../ssr-module-cache.js');
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete installedModules[moduleId];
/******/ 		}
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./api/api.ts":
/*!********************!*\
  !*** ./api/api.ts ***!
  \********************/
/*! exports provided: FilterOptions, MichiganFootballGame, TicketStatus, DefaultApiAxiosParamCreator, DefaultApiFp, DefaultApiFactory, DefaultApi */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FilterOptions\", function() { return FilterOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MichiganFootballGame\", function() { return MichiganFootballGame; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TicketStatus\", function() { return TicketStatus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefaultApiAxiosParamCreator\", function() { return DefaultApiAxiosParamCreator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefaultApiFp\", function() { return DefaultApiFp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefaultApiFactory\", function() { return DefaultApiFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefaultApi\", function() { return DefaultApi; });\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(url__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base */ \"./api/base.ts\");\n// tslint:disable\n\n/**\n * masterseats-server\n * MasterSeats Server\n *\n * The version of the OpenAPI document: 0.0.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n // Some imports not used depending on template conditions\n// @ts-ignore\n\n\n/**\n * \n * @export\n * @interface ChangePassword\n */\n\n/**\n * \n * @export\n * @enum {string}\n */\nlet FilterOptions;\n/**\n * \n * @export\n * @interface InlineResponse200\n */\n\n(function (FilterOptions) {\n  FilterOptions[\"PriceLowestToHighest\"] = \"Price - lowest to highest\";\n  FilterOptions[\"PriceHighestToLowest\"] = \"Price - highest to lowest\";\n  FilterOptions[\"LowestSection\"] = \"Lowest Section\";\n  FilterOptions[\"HighestSection\"] = \"Highest Section\";\n})(FilterOptions || (FilterOptions = {}));\n\n/**\n * \n * @export\n * @enum {string}\n */\nlet MichiganFootballGame;\n/**\n * \n * @export\n * @interface PostTicketBody\n */\n\n(function (MichiganFootballGame) {\n  MichiganFootballGame[\"BallState\"] = \"Michigan vs. Ball State\";\n  MichiganFootballGame[\"ArkansasState\"] = \"Michigan vs. Arkansas State\";\n  MichiganFootballGame[\"Wisconsin\"] = \"Michigan vs. Wisconsin\";\n  MichiganFootballGame[\"PennState\"] = \"Michigan vs. Penn State\";\n  MichiganFootballGame[\"Maryland\"] = \"Michigan vs. Maryland\";\n  MichiganFootballGame[\"Indiana\"] = \"Michigan vs. Indiana\";\n})(MichiganFootballGame || (MichiganFootballGame = {}));\n\n/**\n * \n * @export\n * @enum {string}\n */\nlet TicketStatus;\n/**\n * \n * @export\n * @interface User\n */\n\n(function (TicketStatus) {\n  TicketStatus[\"Open\"] = \"Open\";\n  TicketStatus[\"Removed\"] = \"Removed\";\n  TicketStatus[\"PendingTransfer\"] = \"Pending Transfer\";\n  TicketStatus[\"CompletedTransfer\"] = \"Completed Transfer\";\n})(TicketStatus || (TicketStatus = {}));\n\n/**\n * DefaultApi - axios parameter creator\n * @export\n */\nconst DefaultApiAxiosParamCreator = function (configuration) {\n  return {\n    /**\n     * \n     * @param {ChangePassword} [changePassword] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    changePassword: async (changePassword, options = {}) => {\n      const localVarPath = `/user/change-password`;\n      const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__[\"parse\"](localVarPath, true);\n      let baseOptions;\n\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options\n      };\n      const localVarHeaderParameter = {};\n      const localVarQueryParameter = {}; // authentication bearer required\n      // http bearer authentication required\n\n      if (configuration && configuration.accessToken) {\n        const accessToken = typeof configuration.accessToken === 'function' ? configuration.accessToken() : configuration.accessToken;\n        localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + accessToken;\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n      localVarUrlObj.query = { ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query\n      }; // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n\n      delete localVarUrlObj.search;\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = { ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers\n      };\n      const needsSerialization = typeof changePassword !== \"string\" || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n      localVarRequestOptions.data = needsSerialization ? JSON.stringify(changePassword !== undefined ? changePassword : {}) : changePassword || \"\";\n      return {\n        url: url__WEBPACK_IMPORTED_MODULE_0__[\"format\"](localVarUrlObj),\n        options: localVarRequestOptions\n      };\n    },\n\n    /**\n     * \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getTicketWallet: async (options = {}) => {\n      const localVarPath = `/user/get-ticket-wallet`;\n      const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__[\"parse\"](localVarPath, true);\n      let baseOptions;\n\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options\n      };\n      const localVarHeaderParameter = {};\n      const localVarQueryParameter = {}; // authentication bearer required\n      // http bearer authentication required\n\n      if (configuration && configuration.accessToken) {\n        const accessToken = typeof configuration.accessToken === 'function' ? configuration.accessToken() : configuration.accessToken;\n        localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + accessToken;\n      }\n\n      localVarUrlObj.query = { ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query\n      }; // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n\n      delete localVarUrlObj.search;\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = { ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers\n      };\n      return {\n        url: url__WEBPACK_IMPORTED_MODULE_0__[\"format\"](localVarUrlObj),\n        options: localVarRequestOptions\n      };\n    },\n\n    /**\n     * \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getUser: async (options = {}) => {\n      const localVarPath = `/user/get-user`;\n      const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__[\"parse\"](localVarPath, true);\n      let baseOptions;\n\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options\n      };\n      const localVarHeaderParameter = {};\n      const localVarQueryParameter = {}; // authentication bearer required\n      // http bearer authentication required\n\n      if (configuration && configuration.accessToken) {\n        const accessToken = typeof configuration.accessToken === 'function' ? configuration.accessToken() : configuration.accessToken;\n        localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + accessToken;\n      }\n\n      localVarUrlObj.query = { ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query\n      }; // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n\n      delete localVarUrlObj.search;\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = { ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers\n      };\n      return {\n        url: url__WEBPACK_IMPORTED_MODULE_0__[\"format\"](localVarUrlObj),\n        options: localVarRequestOptions\n      };\n    },\n\n    /**\n     * \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    isEmailVerified: async (options = {}) => {\n      const localVarPath = `/user/is-email-verified`;\n      const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__[\"parse\"](localVarPath, true);\n      let baseOptions;\n\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options\n      };\n      const localVarHeaderParameter = {};\n      const localVarQueryParameter = {}; // authentication bearer required\n      // http bearer authentication required\n\n      if (configuration && configuration.accessToken) {\n        const accessToken = typeof configuration.accessToken === 'function' ? configuration.accessToken() : configuration.accessToken;\n        localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + accessToken;\n      }\n\n      localVarUrlObj.query = { ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query\n      }; // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n\n      delete localVarUrlObj.search;\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = { ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers\n      };\n      return {\n        url: url__WEBPACK_IMPORTED_MODULE_0__[\"format\"](localVarUrlObj),\n        options: localVarRequestOptions\n      };\n    },\n\n    /**\n     * \n     * @param {LoginBody} [loginBody] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    login: async (loginBody, options = {}) => {\n      const localVarPath = `/user/login`;\n      const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__[\"parse\"](localVarPath, true);\n      let baseOptions;\n\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options\n      };\n      const localVarHeaderParameter = {};\n      const localVarQueryParameter = {};\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n      localVarUrlObj.query = { ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query\n      }; // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n\n      delete localVarUrlObj.search;\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = { ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers\n      };\n      const needsSerialization = typeof loginBody !== \"string\" || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n      localVarRequestOptions.data = needsSerialization ? JSON.stringify(loginBody !== undefined ? loginBody : {}) : loginBody || \"\";\n      return {\n        url: url__WEBPACK_IMPORTED_MODULE_0__[\"format\"](localVarUrlObj),\n        options: localVarRequestOptions\n      };\n    },\n\n    /**\n     * \n     * @param {PostTicketBody} [postTicketBody] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    postTicket: async (postTicketBody, options = {}) => {\n      const localVarPath = `/ticket/post-ticket`;\n      const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__[\"parse\"](localVarPath, true);\n      let baseOptions;\n\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options\n      };\n      const localVarHeaderParameter = {};\n      const localVarQueryParameter = {}; // authentication bearer required\n      // http bearer authentication required\n\n      if (configuration && configuration.accessToken) {\n        const accessToken = typeof configuration.accessToken === 'function' ? configuration.accessToken() : configuration.accessToken;\n        localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + accessToken;\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n      localVarUrlObj.query = { ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query\n      }; // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n\n      delete localVarUrlObj.search;\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = { ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers\n      };\n      const needsSerialization = typeof postTicketBody !== \"string\" || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n      localVarRequestOptions.data = needsSerialization ? JSON.stringify(postTicketBody !== undefined ? postTicketBody : {}) : postTicketBody || \"\";\n      return {\n        url: url__WEBPACK_IMPORTED_MODULE_0__[\"format\"](localVarUrlObj),\n        options: localVarRequestOptions\n      };\n    },\n\n    /**\n     * \n     * @param {SignUpBody} [signUpBody] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    register: async (signUpBody, options = {}) => {\n      const localVarPath = `/user/register`;\n      const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__[\"parse\"](localVarPath, true);\n      let baseOptions;\n\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options\n      };\n      const localVarHeaderParameter = {};\n      const localVarQueryParameter = {};\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n      localVarUrlObj.query = { ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query\n      }; // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n\n      delete localVarUrlObj.search;\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = { ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers\n      };\n      const needsSerialization = typeof signUpBody !== \"string\" || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n      localVarRequestOptions.data = needsSerialization ? JSON.stringify(signUpBody !== undefined ? signUpBody : {}) : signUpBody || \"\";\n      return {\n        url: url__WEBPACK_IMPORTED_MODULE_0__[\"format\"](localVarUrlObj),\n        options: localVarRequestOptions\n      };\n    },\n\n    /**\n     * \n     * @param {RemoveTicketBody} [removeTicketBody] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    removeTicket: async (removeTicketBody, options = {}) => {\n      const localVarPath = `/ticket/remove-ticket`;\n      const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__[\"parse\"](localVarPath, true);\n      let baseOptions;\n\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options\n      };\n      const localVarHeaderParameter = {};\n      const localVarQueryParameter = {}; // authentication bearer required\n      // http bearer authentication required\n\n      if (configuration && configuration.accessToken) {\n        const accessToken = typeof configuration.accessToken === 'function' ? configuration.accessToken() : configuration.accessToken;\n        localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + accessToken;\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n      localVarUrlObj.query = { ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query\n      }; // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n\n      delete localVarUrlObj.search;\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = { ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers\n      };\n      const needsSerialization = typeof removeTicketBody !== \"string\" || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n      localVarRequestOptions.data = needsSerialization ? JSON.stringify(removeTicketBody !== undefined ? removeTicketBody : {}) : removeTicketBody || \"\";\n      return {\n        url: url__WEBPACK_IMPORTED_MODULE_0__[\"format\"](localVarUrlObj),\n        options: localVarRequestOptions\n      };\n    },\n\n    /**\n     * \n     * @param {SortTicketsBody} [sortTicketsBody] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    sortTickets: async (sortTicketsBody, options = {}) => {\n      const localVarPath = `/ticket/sort-tickets`;\n      const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__[\"parse\"](localVarPath, true);\n      let baseOptions;\n\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = {\n        method: 'POST',\n        ...baseOptions,\n        ...options\n      };\n      const localVarHeaderParameter = {};\n      const localVarQueryParameter = {};\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n      localVarUrlObj.query = { ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query\n      }; // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n\n      delete localVarUrlObj.search;\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = { ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers\n      };\n      const needsSerialization = typeof sortTicketsBody !== \"string\" || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n      localVarRequestOptions.data = needsSerialization ? JSON.stringify(sortTicketsBody !== undefined ? sortTicketsBody : {}) : sortTicketsBody || \"\";\n      return {\n        url: url__WEBPACK_IMPORTED_MODULE_0__[\"format\"](localVarUrlObj),\n        options: localVarRequestOptions\n      };\n    },\n\n    /**\n     * \n     * @param {VerifyEmailBody} [verifyEmailBody] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    verifyEmail: async (verifyEmailBody, options = {}) => {\n      const localVarPath = `/user/verify-email`;\n      const localVarUrlObj = url__WEBPACK_IMPORTED_MODULE_0__[\"parse\"](localVarPath, true);\n      let baseOptions;\n\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = {\n        method: 'PUT',\n        ...baseOptions,\n        ...options\n      };\n      const localVarHeaderParameter = {};\n      const localVarQueryParameter = {};\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n      localVarUrlObj.query = { ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query\n      }; // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n\n      delete localVarUrlObj.search;\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = { ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers\n      };\n      const needsSerialization = typeof verifyEmailBody !== \"string\" || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n      localVarRequestOptions.data = needsSerialization ? JSON.stringify(verifyEmailBody !== undefined ? verifyEmailBody : {}) : verifyEmailBody || \"\";\n      return {\n        url: url__WEBPACK_IMPORTED_MODULE_0__[\"format\"](localVarUrlObj),\n        options: localVarRequestOptions\n      };\n    }\n  };\n};\n/**\n * DefaultApi - functional programming interface\n * @export\n */\n\nconst DefaultApiFp = function (configuration) {\n  return {\n    /**\n     * \n     * @param {ChangePassword} [changePassword] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async changePassword(changePassword, options) {\n      const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).changePassword(changePassword, options);\n      return (axios = axios__WEBPACK_IMPORTED_MODULE_1___default.a, basePath = _base__WEBPACK_IMPORTED_MODULE_2__[\"BASE_PATH\"]) => {\n        const axiosRequestArgs = { ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url\n        };\n        return axios.request(axiosRequestArgs);\n      };\n    },\n\n    /**\n     * \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getTicketWallet(options) {\n      const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).getTicketWallet(options);\n      return (axios = axios__WEBPACK_IMPORTED_MODULE_1___default.a, basePath = _base__WEBPACK_IMPORTED_MODULE_2__[\"BASE_PATH\"]) => {\n        const axiosRequestArgs = { ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url\n        };\n        return axios.request(axiosRequestArgs);\n      };\n    },\n\n    /**\n     * \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getUser(options) {\n      const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).getUser(options);\n      return (axios = axios__WEBPACK_IMPORTED_MODULE_1___default.a, basePath = _base__WEBPACK_IMPORTED_MODULE_2__[\"BASE_PATH\"]) => {\n        const axiosRequestArgs = { ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url\n        };\n        return axios.request(axiosRequestArgs);\n      };\n    },\n\n    /**\n     * \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async isEmailVerified(options) {\n      const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).isEmailVerified(options);\n      return (axios = axios__WEBPACK_IMPORTED_MODULE_1___default.a, basePath = _base__WEBPACK_IMPORTED_MODULE_2__[\"BASE_PATH\"]) => {\n        const axiosRequestArgs = { ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url\n        };\n        return axios.request(axiosRequestArgs);\n      };\n    },\n\n    /**\n     * \n     * @param {LoginBody} [loginBody] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async login(loginBody, options) {\n      const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).login(loginBody, options);\n      return (axios = axios__WEBPACK_IMPORTED_MODULE_1___default.a, basePath = _base__WEBPACK_IMPORTED_MODULE_2__[\"BASE_PATH\"]) => {\n        const axiosRequestArgs = { ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url\n        };\n        return axios.request(axiosRequestArgs);\n      };\n    },\n\n    /**\n     * \n     * @param {PostTicketBody} [postTicketBody] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async postTicket(postTicketBody, options) {\n      const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).postTicket(postTicketBody, options);\n      return (axios = axios__WEBPACK_IMPORTED_MODULE_1___default.a, basePath = _base__WEBPACK_IMPORTED_MODULE_2__[\"BASE_PATH\"]) => {\n        const axiosRequestArgs = { ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url\n        };\n        return axios.request(axiosRequestArgs);\n      };\n    },\n\n    /**\n     * \n     * @param {SignUpBody} [signUpBody] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async register(signUpBody, options) {\n      const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).register(signUpBody, options);\n      return (axios = axios__WEBPACK_IMPORTED_MODULE_1___default.a, basePath = _base__WEBPACK_IMPORTED_MODULE_2__[\"BASE_PATH\"]) => {\n        const axiosRequestArgs = { ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url\n        };\n        return axios.request(axiosRequestArgs);\n      };\n    },\n\n    /**\n     * \n     * @param {RemoveTicketBody} [removeTicketBody] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async removeTicket(removeTicketBody, options) {\n      const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).removeTicket(removeTicketBody, options);\n      return (axios = axios__WEBPACK_IMPORTED_MODULE_1___default.a, basePath = _base__WEBPACK_IMPORTED_MODULE_2__[\"BASE_PATH\"]) => {\n        const axiosRequestArgs = { ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url\n        };\n        return axios.request(axiosRequestArgs);\n      };\n    },\n\n    /**\n     * \n     * @param {SortTicketsBody} [sortTicketsBody] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async sortTickets(sortTicketsBody, options) {\n      const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).sortTickets(sortTicketsBody, options);\n      return (axios = axios__WEBPACK_IMPORTED_MODULE_1___default.a, basePath = _base__WEBPACK_IMPORTED_MODULE_2__[\"BASE_PATH\"]) => {\n        const axiosRequestArgs = { ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url\n        };\n        return axios.request(axiosRequestArgs);\n      };\n    },\n\n    /**\n     * \n     * @param {VerifyEmailBody} [verifyEmailBody] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async verifyEmail(verifyEmailBody, options) {\n      const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).verifyEmail(verifyEmailBody, options);\n      return (axios = axios__WEBPACK_IMPORTED_MODULE_1___default.a, basePath = _base__WEBPACK_IMPORTED_MODULE_2__[\"BASE_PATH\"]) => {\n        const axiosRequestArgs = { ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url\n        };\n        return axios.request(axiosRequestArgs);\n      };\n    }\n\n  };\n};\n/**\n * DefaultApi - factory interface\n * @export\n */\n\nconst DefaultApiFactory = function (configuration, basePath, axios) {\n  return {\n    /**\n     * \n     * @param {ChangePassword} [changePassword] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    changePassword(changePassword, options) {\n      return DefaultApiFp(configuration).changePassword(changePassword, options).then(request => request(axios, basePath));\n    },\n\n    /**\n     * \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getTicketWallet(options) {\n      return DefaultApiFp(configuration).getTicketWallet(options).then(request => request(axios, basePath));\n    },\n\n    /**\n     * \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getUser(options) {\n      return DefaultApiFp(configuration).getUser(options).then(request => request(axios, basePath));\n    },\n\n    /**\n     * \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    isEmailVerified(options) {\n      return DefaultApiFp(configuration).isEmailVerified(options).then(request => request(axios, basePath));\n    },\n\n    /**\n     * \n     * @param {LoginBody} [loginBody] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    login(loginBody, options) {\n      return DefaultApiFp(configuration).login(loginBody, options).then(request => request(axios, basePath));\n    },\n\n    /**\n     * \n     * @param {PostTicketBody} [postTicketBody] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    postTicket(postTicketBody, options) {\n      return DefaultApiFp(configuration).postTicket(postTicketBody, options).then(request => request(axios, basePath));\n    },\n\n    /**\n     * \n     * @param {SignUpBody} [signUpBody] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    register(signUpBody, options) {\n      return DefaultApiFp(configuration).register(signUpBody, options).then(request => request(axios, basePath));\n    },\n\n    /**\n     * \n     * @param {RemoveTicketBody} [removeTicketBody] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    removeTicket(removeTicketBody, options) {\n      return DefaultApiFp(configuration).removeTicket(removeTicketBody, options).then(request => request(axios, basePath));\n    },\n\n    /**\n     * \n     * @param {SortTicketsBody} [sortTicketsBody] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    sortTickets(sortTicketsBody, options) {\n      return DefaultApiFp(configuration).sortTickets(sortTicketsBody, options).then(request => request(axios, basePath));\n    },\n\n    /**\n     * \n     * @param {VerifyEmailBody} [verifyEmailBody] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    verifyEmail(verifyEmailBody, options) {\n      return DefaultApiFp(configuration).verifyEmail(verifyEmailBody, options).then(request => request(axios, basePath));\n    }\n\n  };\n};\n/**\n * DefaultApi - object-oriented interface\n * @export\n * @class DefaultApi\n * @extends {BaseAPI}\n */\n\nclass DefaultApi extends _base__WEBPACK_IMPORTED_MODULE_2__[\"BaseAPI\"] {\n  /**\n   * \n   * @param {ChangePassword} [changePassword] \n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof DefaultApi\n   */\n  changePassword(changePassword, options) {\n    return DefaultApiFp(this.configuration).changePassword(changePassword, options).then(request => request(this.axios, this.basePath));\n  }\n  /**\n   * \n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof DefaultApi\n   */\n\n\n  getTicketWallet(options) {\n    return DefaultApiFp(this.configuration).getTicketWallet(options).then(request => request(this.axios, this.basePath));\n  }\n  /**\n   * \n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof DefaultApi\n   */\n\n\n  getUser(options) {\n    return DefaultApiFp(this.configuration).getUser(options).then(request => request(this.axios, this.basePath));\n  }\n  /**\n   * \n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof DefaultApi\n   */\n\n\n  isEmailVerified(options) {\n    return DefaultApiFp(this.configuration).isEmailVerified(options).then(request => request(this.axios, this.basePath));\n  }\n  /**\n   * \n   * @param {LoginBody} [loginBody] \n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof DefaultApi\n   */\n\n\n  login(loginBody, options) {\n    return DefaultApiFp(this.configuration).login(loginBody, options).then(request => request(this.axios, this.basePath));\n  }\n  /**\n   * \n   * @param {PostTicketBody} [postTicketBody] \n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof DefaultApi\n   */\n\n\n  postTicket(postTicketBody, options) {\n    return DefaultApiFp(this.configuration).postTicket(postTicketBody, options).then(request => request(this.axios, this.basePath));\n  }\n  /**\n   * \n   * @param {SignUpBody} [signUpBody] \n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof DefaultApi\n   */\n\n\n  register(signUpBody, options) {\n    return DefaultApiFp(this.configuration).register(signUpBody, options).then(request => request(this.axios, this.basePath));\n  }\n  /**\n   * \n   * @param {RemoveTicketBody} [removeTicketBody] \n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof DefaultApi\n   */\n\n\n  removeTicket(removeTicketBody, options) {\n    return DefaultApiFp(this.configuration).removeTicket(removeTicketBody, options).then(request => request(this.axios, this.basePath));\n  }\n  /**\n   * \n   * @param {SortTicketsBody} [sortTicketsBody] \n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof DefaultApi\n   */\n\n\n  sortTickets(sortTicketsBody, options) {\n    return DefaultApiFp(this.configuration).sortTickets(sortTicketsBody, options).then(request => request(this.axios, this.basePath));\n  }\n  /**\n   * \n   * @param {VerifyEmailBody} [verifyEmailBody] \n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof DefaultApi\n   */\n\n\n  verifyEmail(verifyEmailBody, options) {\n    return DefaultApiFp(this.configuration).verifyEmail(verifyEmailBody, options).then(request => request(this.axios, this.basePath));\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./api/api.ts\n");

/***/ }),

/***/ "./api/base.ts":
/*!*********************!*\
  !*** ./api/base.ts ***!
  \*********************/
/*! exports provided: BASE_PATH, COLLECTION_FORMATS, BaseAPI, RequiredError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BASE_PATH\", function() { return BASE_PATH; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"COLLECTION_FORMATS\", function() { return COLLECTION_FORMATS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BaseAPI\", function() { return BaseAPI; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RequiredError\", function() { return RequiredError; });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// tslint:disable\n\n/**\n * masterseats-server\n * MasterSeats Server\n *\n * The version of the OpenAPI document: 0.0.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n// Some imports not used depending on template conditions\n// @ts-ignore\n\nconst BASE_PATH = \"https://masterseats-server.herokuapp.com/api/v1\".replace(/\\/+$/, \"\");\n/**\n *\n * @export\n */\n\nconst COLLECTION_FORMATS = {\n  csv: \",\",\n  ssv: \" \",\n  tsv: \"\\t\",\n  pipes: \"|\"\n};\n/**\n *\n * @export\n * @interface RequestArgs\n */\n\n/**\n *\n * @export\n * @class BaseAPI\n */\nclass BaseAPI {\n  constructor(configuration, basePath = BASE_PATH, axios = axios__WEBPACK_IMPORTED_MODULE_0___default.a) {\n    this.basePath = basePath;\n    this.axios = axios;\n\n    _defineProperty(this, \"configuration\", void 0);\n\n    if (configuration) {\n      this.configuration = configuration;\n      this.basePath = configuration.basePath || this.basePath;\n    }\n  }\n\n}\n;\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\n\nclass RequiredError extends Error {\n  constructor(field, msg) {\n    super(msg);\n    this.field = field;\n\n    _defineProperty(this, \"name\", \"RequiredError\");\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcGkvYmFzZS50cz9lYjA0Il0sIm5hbWVzIjpbIkJBU0VfUEFUSCIsInJlcGxhY2UiLCJDT0xMRUNUSU9OX0ZPUk1BVFMiLCJjc3YiLCJzc3YiLCJ0c3YiLCJwaXBlcyIsIkJhc2VBUEkiLCJjb25zdHJ1Y3RvciIsImNvbmZpZ3VyYXRpb24iLCJiYXNlUGF0aCIsImF4aW9zIiwiZ2xvYmFsQXhpb3MiLCJSZXF1aXJlZEVycm9yIiwiRXJyb3IiLCJmaWVsZCIsIm1zZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7Ozs7Ozs7Ozs7O0FBY0E7QUFDQTtBQUNBO0FBRU8sTUFBTUEsU0FBUyxHQUFHLGtEQUFrREMsT0FBbEQsQ0FBMEQsTUFBMUQsRUFBa0UsRUFBbEUsQ0FBbEI7QUFFUDs7Ozs7QUFJTyxNQUFNQyxrQkFBa0IsR0FBRztBQUM5QkMsS0FBRyxFQUFFLEdBRHlCO0FBRTlCQyxLQUFHLEVBQUUsR0FGeUI7QUFHOUJDLEtBQUcsRUFBRSxJQUh5QjtBQUk5QkMsT0FBSyxFQUFFO0FBSnVCLENBQTNCO0FBT1A7Ozs7OztBQVVBOzs7OztBQUtPLE1BQU1DLE9BQU4sQ0FBYztBQUdqQkMsYUFBVyxDQUFDQyxhQUFELEVBQTBDQyxRQUFnQixHQUFHVixTQUE3RCxFQUFrRlcsS0FBb0IsR0FBR0MsNENBQXpHLEVBQXNIO0FBQUEsU0FBNUVGLFFBQTRFLEdBQTVFQSxRQUE0RTtBQUFBLFNBQXBDQyxLQUFvQyxHQUFwQ0EsS0FBb0M7O0FBQUE7O0FBQzdILFFBQUlGLGFBQUosRUFBbUI7QUFDZixXQUFLQSxhQUFMLEdBQXFCQSxhQUFyQjtBQUNBLFdBQUtDLFFBQUwsR0FBZ0JELGFBQWEsQ0FBQ0MsUUFBZCxJQUEwQixLQUFLQSxRQUEvQztBQUNIO0FBQ0o7O0FBUmdCO0FBU3BCO0FBRUQ7Ozs7Ozs7QUFNTyxNQUFNRyxhQUFOLFNBQTRCQyxLQUE1QixDQUFrQztBQUVyQ04sYUFBVyxDQUFRTyxLQUFSLEVBQXVCQyxHQUF2QixFQUFxQztBQUM1QyxVQUFNQSxHQUFOO0FBRDRDLFNBQTdCRCxLQUE2QixHQUE3QkEsS0FBNkI7O0FBQUEsa0NBRHhCLGVBQ3dCO0FBRS9DOztBQUpvQyIsImZpbGUiOiIuL2FwaS9iYXNlLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gdHNsaW50OmRpc2FibGVcbi8qKlxuICogbWFzdGVyc2VhdHMtc2VydmVyXG4gKiBNYXN0ZXJTZWF0cyBTZXJ2ZXJcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMC4wLjFcbiAqIFxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuXG5cbmltcG9ydCB7IENvbmZpZ3VyYXRpb24gfSBmcm9tIFwiLi9jb25maWd1cmF0aW9uXCI7XG4vLyBTb21lIGltcG9ydHMgbm90IHVzZWQgZGVwZW5kaW5nIG9uIHRlbXBsYXRlIGNvbmRpdGlvbnNcbi8vIEB0cy1pZ25vcmVcbmltcG9ydCBnbG9iYWxBeGlvcywgeyBBeGlvc1Byb21pc2UsIEF4aW9zSW5zdGFuY2UgfSBmcm9tICdheGlvcyc7XG5cbmV4cG9ydCBjb25zdCBCQVNFX1BBVEggPSBcImh0dHBzOi8vbWFzdGVyc2VhdHMtc2VydmVyLmhlcm9rdWFwcC5jb20vYXBpL3YxXCIucmVwbGFjZSgvXFwvKyQvLCBcIlwiKTtcblxuLyoqXG4gKlxuICogQGV4cG9ydFxuICovXG5leHBvcnQgY29uc3QgQ09MTEVDVElPTl9GT1JNQVRTID0ge1xuICAgIGNzdjogXCIsXCIsXG4gICAgc3N2OiBcIiBcIixcbiAgICB0c3Y6IFwiXFx0XCIsXG4gICAgcGlwZXM6IFwifFwiLFxufTtcblxuLyoqXG4gKlxuICogQGV4cG9ydFxuICogQGludGVyZmFjZSBSZXF1ZXN0QXJnc1xuICovXG5leHBvcnQgaW50ZXJmYWNlIFJlcXVlc3RBcmdzIHtcbiAgICB1cmw6IHN0cmluZztcbiAgICBvcHRpb25zOiBhbnk7XG59XG5cbi8qKlxuICpcbiAqIEBleHBvcnRcbiAqIEBjbGFzcyBCYXNlQVBJXG4gKi9cbmV4cG9ydCBjbGFzcyBCYXNlQVBJIHtcbiAgICBwcm90ZWN0ZWQgY29uZmlndXJhdGlvbjogQ29uZmlndXJhdGlvbiB8IHVuZGVmaW5lZDtcblxuICAgIGNvbnN0cnVjdG9yKGNvbmZpZ3VyYXRpb24/OiBDb25maWd1cmF0aW9uLCBwcm90ZWN0ZWQgYmFzZVBhdGg6IHN0cmluZyA9IEJBU0VfUEFUSCwgcHJvdGVjdGVkIGF4aW9zOiBBeGlvc0luc3RhbmNlID0gZ2xvYmFsQXhpb3MpIHtcbiAgICAgICAgaWYgKGNvbmZpZ3VyYXRpb24pIHtcbiAgICAgICAgICAgIHRoaXMuY29uZmlndXJhdGlvbiA9IGNvbmZpZ3VyYXRpb247XG4gICAgICAgICAgICB0aGlzLmJhc2VQYXRoID0gY29uZmlndXJhdGlvbi5iYXNlUGF0aCB8fCB0aGlzLmJhc2VQYXRoO1xuICAgICAgICB9XG4gICAgfVxufTtcblxuLyoqXG4gKlxuICogQGV4cG9ydFxuICogQGNsYXNzIFJlcXVpcmVkRXJyb3JcbiAqIEBleHRlbmRzIHtFcnJvcn1cbiAqL1xuZXhwb3J0IGNsYXNzIFJlcXVpcmVkRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgbmFtZTogXCJSZXF1aXJlZEVycm9yXCIgPSBcIlJlcXVpcmVkRXJyb3JcIjtcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgZmllbGQ6IHN0cmluZywgbXNnPzogc3RyaW5nKSB7XG4gICAgICAgIHN1cGVyKG1zZyk7XG4gICAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./api/base.ts\n");

/***/ }),

/***/ "./api/configuration.ts":
/*!******************************!*\
  !*** ./api/configuration.ts ***!
  \******************************/
/*! exports provided: Configuration */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Configuration\", function() { return Configuration; });\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// tslint:disable\n\n/**\n * masterseats-server\n * MasterSeats Server\n *\n * The version of the OpenAPI document: 0.0.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nclass Configuration {\n  /**\n   * parameter for apiKey security\n   * @param name security name\n   * @memberof Configuration\n   */\n\n  /**\n   * parameter for basic security\n   * \n   * @type {string}\n   * @memberof Configuration\n   */\n\n  /**\n   * parameter for basic security\n   * \n   * @type {string}\n   * @memberof Configuration\n   */\n\n  /**\n   * parameter for oauth2 security\n   * @param name security name\n   * @param scopes oauth2 scope\n   * @memberof Configuration\n   */\n\n  /**\n   * override base path\n   * \n   * @type {string}\n   * @memberof Configuration\n   */\n\n  /**\n   * base options for axios calls\n   *\n   * @type {any}\n   * @memberof Configuration\n   */\n  constructor(param = {}) {\n    _defineProperty(this, \"apiKey\", void 0);\n\n    _defineProperty(this, \"username\", void 0);\n\n    _defineProperty(this, \"password\", void 0);\n\n    _defineProperty(this, \"accessToken\", void 0);\n\n    _defineProperty(this, \"basePath\", void 0);\n\n    _defineProperty(this, \"baseOptions\", void 0);\n\n    this.apiKey = param.apiKey;\n    this.username = param.username;\n    this.password = param.password;\n    this.accessToken = param.accessToken;\n    this.basePath = param.basePath;\n    this.baseOptions = param.baseOptions;\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcGkvY29uZmlndXJhdGlvbi50cz82YTUyIl0sIm5hbWVzIjpbIkNvbmZpZ3VyYXRpb24iLCJjb25zdHJ1Y3RvciIsInBhcmFtIiwiYXBpS2V5IiwidXNlcm5hbWUiLCJwYXNzd29yZCIsImFjY2Vzc1Rva2VuIiwiYmFzZVBhdGgiLCJiYXNlT3B0aW9ucyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7OztBQXNCTyxNQUFNQSxhQUFOLENBQW9CO0FBQ3ZCOzs7Ozs7QUFNQTs7Ozs7OztBQU9BOzs7Ozs7O0FBT0E7Ozs7Ozs7QUFPQTs7Ozs7OztBQU9BOzs7Ozs7QUFRQUMsYUFBVyxDQUFDQyxLQUE4QixHQUFHLEVBQWxDLEVBQXNDO0FBQUE7O0FBQUE7O0FBQUE7O0FBQUE7O0FBQUE7O0FBQUE7O0FBQzdDLFNBQUtDLE1BQUwsR0FBY0QsS0FBSyxDQUFDQyxNQUFwQjtBQUNBLFNBQUtDLFFBQUwsR0FBZ0JGLEtBQUssQ0FBQ0UsUUFBdEI7QUFDQSxTQUFLQyxRQUFMLEdBQWdCSCxLQUFLLENBQUNHLFFBQXRCO0FBQ0EsU0FBS0MsV0FBTCxHQUFtQkosS0FBSyxDQUFDSSxXQUF6QjtBQUNBLFNBQUtDLFFBQUwsR0FBZ0JMLEtBQUssQ0FBQ0ssUUFBdEI7QUFDQSxTQUFLQyxXQUFMLEdBQW1CTixLQUFLLENBQUNNLFdBQXpCO0FBQ0g7O0FBbERzQiIsImZpbGUiOiIuL2FwaS9jb25maWd1cmF0aW9uLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gdHNsaW50OmRpc2FibGVcbi8qKlxuICogbWFzdGVyc2VhdHMtc2VydmVyXG4gKiBNYXN0ZXJTZWF0cyBTZXJ2ZXJcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMC4wLjFcbiAqIFxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuXG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29uZmlndXJhdGlvblBhcmFtZXRlcnMge1xuICAgIGFwaUtleT86IHN0cmluZyB8IFByb21pc2U8c3RyaW5nPiB8ICgobmFtZTogc3RyaW5nKSA9PiBzdHJpbmcpIHwgKChuYW1lOiBzdHJpbmcpID0+IFByb21pc2U8c3RyaW5nPik7XG4gICAgdXNlcm5hbWU/OiBzdHJpbmc7XG4gICAgcGFzc3dvcmQ/OiBzdHJpbmc7XG4gICAgYWNjZXNzVG9rZW4/OiBzdHJpbmcgfCAoKG5hbWU/OiBzdHJpbmcsIHNjb3Blcz86IHN0cmluZ1tdKSA9PiBzdHJpbmcpO1xuICAgIGJhc2VQYXRoPzogc3RyaW5nO1xuICAgIGJhc2VPcHRpb25zPzogYW55O1xufVxuXG5leHBvcnQgY2xhc3MgQ29uZmlndXJhdGlvbiB7XG4gICAgLyoqXG4gICAgICogcGFyYW1ldGVyIGZvciBhcGlLZXkgc2VjdXJpdHlcbiAgICAgKiBAcGFyYW0gbmFtZSBzZWN1cml0eSBuYW1lXG4gICAgICogQG1lbWJlcm9mIENvbmZpZ3VyYXRpb25cbiAgICAgKi9cbiAgICBhcGlLZXk/OiBzdHJpbmcgfCBQcm9taXNlPHN0cmluZz4gfCAoKG5hbWU6IHN0cmluZykgPT4gc3RyaW5nKSB8ICgobmFtZTogc3RyaW5nKSA9PiBQcm9taXNlPHN0cmluZz4pO1xuICAgIC8qKlxuICAgICAqIHBhcmFtZXRlciBmb3IgYmFzaWMgc2VjdXJpdHlcbiAgICAgKiBcbiAgICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgICAqIEBtZW1iZXJvZiBDb25maWd1cmF0aW9uXG4gICAgICovXG4gICAgdXNlcm5hbWU/OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogcGFyYW1ldGVyIGZvciBiYXNpYyBzZWN1cml0eVxuICAgICAqIFxuICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICogQG1lbWJlcm9mIENvbmZpZ3VyYXRpb25cbiAgICAgKi9cbiAgICBwYXNzd29yZD86IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBwYXJhbWV0ZXIgZm9yIG9hdXRoMiBzZWN1cml0eVxuICAgICAqIEBwYXJhbSBuYW1lIHNlY3VyaXR5IG5hbWVcbiAgICAgKiBAcGFyYW0gc2NvcGVzIG9hdXRoMiBzY29wZVxuICAgICAqIEBtZW1iZXJvZiBDb25maWd1cmF0aW9uXG4gICAgICovXG4gICAgYWNjZXNzVG9rZW4/OiBzdHJpbmcgfCAoKG5hbWU/OiBzdHJpbmcsIHNjb3Blcz86IHN0cmluZ1tdKSA9PiBzdHJpbmcpO1xuICAgIC8qKlxuICAgICAqIG92ZXJyaWRlIGJhc2UgcGF0aFxuICAgICAqIFxuICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICogQG1lbWJlcm9mIENvbmZpZ3VyYXRpb25cbiAgICAgKi9cbiAgICBiYXNlUGF0aD86IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBiYXNlIG9wdGlvbnMgZm9yIGF4aW9zIGNhbGxzXG4gICAgICpcbiAgICAgKiBAdHlwZSB7YW55fVxuICAgICAqIEBtZW1iZXJvZiBDb25maWd1cmF0aW9uXG4gICAgICovXG4gICAgYmFzZU9wdGlvbnM/OiBhbnk7XG5cbiAgICBjb25zdHJ1Y3RvcihwYXJhbTogQ29uZmlndXJhdGlvblBhcmFtZXRlcnMgPSB7fSkge1xuICAgICAgICB0aGlzLmFwaUtleSA9IHBhcmFtLmFwaUtleTtcbiAgICAgICAgdGhpcy51c2VybmFtZSA9IHBhcmFtLnVzZXJuYW1lO1xuICAgICAgICB0aGlzLnBhc3N3b3JkID0gcGFyYW0ucGFzc3dvcmQ7XG4gICAgICAgIHRoaXMuYWNjZXNzVG9rZW4gPSBwYXJhbS5hY2Nlc3NUb2tlbjtcbiAgICAgICAgdGhpcy5iYXNlUGF0aCA9IHBhcmFtLmJhc2VQYXRoO1xuICAgICAgICB0aGlzLmJhc2VPcHRpb25zID0gcGFyYW0uYmFzZU9wdGlvbnM7XG4gICAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./api/configuration.ts\n");

/***/ }),

/***/ "./api/index.ts":
/*!**********************!*\
  !*** ./api/index.ts ***!
  \**********************/
/*! exports provided: FilterOptions, MichiganFootballGame, TicketStatus, DefaultApiAxiosParamCreator, DefaultApiFp, DefaultApiFactory, DefaultApi, Configuration */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api */ \"./api/api.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FilterOptions\", function() { return _api__WEBPACK_IMPORTED_MODULE_0__[\"FilterOptions\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MichiganFootballGame\", function() { return _api__WEBPACK_IMPORTED_MODULE_0__[\"MichiganFootballGame\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TicketStatus\", function() { return _api__WEBPACK_IMPORTED_MODULE_0__[\"TicketStatus\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DefaultApiAxiosParamCreator\", function() { return _api__WEBPACK_IMPORTED_MODULE_0__[\"DefaultApiAxiosParamCreator\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DefaultApiFp\", function() { return _api__WEBPACK_IMPORTED_MODULE_0__[\"DefaultApiFp\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DefaultApiFactory\", function() { return _api__WEBPACK_IMPORTED_MODULE_0__[\"DefaultApiFactory\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DefaultApi\", function() { return _api__WEBPACK_IMPORTED_MODULE_0__[\"DefaultApi\"]; });\n\n/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./configuration */ \"./api/configuration.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Configuration\", function() { return _configuration__WEBPACK_IMPORTED_MODULE_1__[\"Configuration\"]; });\n\n// tslint:disable\n\n/**\n * masterseats-server\n * MasterSeats Server\n *\n * The version of the OpenAPI document: 0.0.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcGkvaW5kZXgudHM/YWQ2ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUNBOzs7Ozs7Ozs7OztBQWFBIiwiZmlsZSI6Ii4vYXBpL2luZGV4LnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gdHNsaW50OmRpc2FibGVcbi8qKlxuICogbWFzdGVyc2VhdHMtc2VydmVyXG4gKiBNYXN0ZXJTZWF0cyBTZXJ2ZXJcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMC4wLjFcbiAqIFxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuXG5cbmV4cG9ydCAqIGZyb20gXCIuL2FwaVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vY29uZmlndXJhdGlvblwiO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./api/index.ts\n");

/***/ }),

/***/ "./pages/verification.tsx":
/*!********************************!*\
  !*** ./pages/verification.tsx ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ \"antd\");\n/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/head */ \"next/head\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _src_components_LoginBackground__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../src/components/LoginBackground */ \"./src/components/LoginBackground.tsx\");\n/* harmony import */ var _src_lib_UserContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../src/lib/UserContext */ \"./src/lib/UserContext.tsx\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/router */ \"next/router\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _src_areas_OpenPage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../src/areas/OpenPage */ \"./src/areas/OpenPage.tsx\");\n\n\n\n\n\n\n\n\nconst Verification = props => {\n  const {\n    api,\n    setToken\n  } = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useContext\"])(_src_lib_UserContext__WEBPACK_IMPORTED_MODULE_4__[\"UserContext\"]);\n  const router = Object(next_router__WEBPACK_IMPORTED_MODULE_5__[\"useRouter\"])();\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(() => {\n    const verifyEmailFetch = async () => {\n      try {\n        const body = await api.verifyEmail({\n          id: router.query.token\n        });\n        setToken(body.data);\n      } catch (err) {\n        antd__WEBPACK_IMPORTED_MODULE_1__[\"message\"].error(\"There was a problem verifying your account. Please contafct us.\");\n      }\n\n      Object(_src_areas_OpenPage__WEBPACK_IMPORTED_MODULE_6__[\"default\"])('/dashboard');\n    };\n\n    verifyEmailFetch();\n  }, []);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(next_head__WEBPACK_IMPORTED_MODULE_2___default.a, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"title\", null, \"MasterSeats \\u2022 Email Verification\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_src_components_LoginBackground__WEBPACK_IMPORTED_MODULE_3__[\"default\"], null));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Verification);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWdlcy92ZXJpZmljYXRpb24udHN4PzMyNzIiXSwibmFtZXMiOlsiVmVyaWZpY2F0aW9uIiwicHJvcHMiLCJhcGkiLCJzZXRUb2tlbiIsInVzZUNvbnRleHQiLCJVc2VyQ29udGV4dCIsInJvdXRlciIsInVzZVJvdXRlciIsInVzZUVmZmVjdCIsInZlcmlmeUVtYWlsRmV0Y2giLCJib2R5IiwidmVyaWZ5RW1haWwiLCJpZCIsInF1ZXJ5IiwidG9rZW4iLCJkYXRhIiwiZXJyIiwibWVzc2FnZSIsImVycm9yIiwiT3BlblBhZ2UiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUVBLE1BQU1BLFlBQXNCLEdBQUdDLEtBQUssSUFBSTtBQUNwQyxRQUFNO0FBQUNDLE9BQUQ7QUFBTUM7QUFBTixNQUFrQkMsd0RBQVUsQ0FBQ0MsZ0VBQUQsQ0FBbEM7QUFDQSxRQUFNQyxNQUFNLEdBQUdDLDZEQUFTLEVBQXhCO0FBRUFDLHlEQUFTLENBQUMsTUFBTTtBQUNaLFVBQU1DLGdCQUFnQixHQUFHLFlBQVk7QUFDakMsVUFBSTtBQUNBLGNBQU1DLElBQUksR0FBRyxNQUFNUixHQUFHLENBQUNTLFdBQUosQ0FBZ0I7QUFBQ0MsWUFBRSxFQUFFTixNQUFNLENBQUNPLEtBQVAsQ0FBYUM7QUFBbEIsU0FBaEIsQ0FBbkI7QUFDQVgsZ0JBQVEsQ0FBQ08sSUFBSSxDQUFDSyxJQUFOLENBQVI7QUFDSCxPQUhELENBR0UsT0FBT0MsR0FBUCxFQUFZO0FBQ1ZDLG9EQUFPLENBQUNDLEtBQVIsQ0FBYyxpRUFBZDtBQUNIOztBQUNEQyx5RUFBUSxDQUFDLFlBQUQsQ0FBUjtBQUNILEtBUkQ7O0FBVUFWLG9CQUFnQjtBQUNuQixHQVpRLEVBWU4sRUFaTSxDQUFUO0FBYUEsc0JBQ0kscUlBQ0ksMkRBQUMsZ0RBQUQscUJBQ0ksa0hBREosQ0FESixlQUlJLDJEQUFDLHVFQUFELE9BSkosQ0FESjtBQVVILENBM0JEOztBQTZCZVQsMkVBQWYiLCJmaWxlIjoiLi9wYWdlcy92ZXJpZmljYXRpb24udHN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7dXNlQ29udGV4dCwgdXNlU3RhdGUsIHVzZUVmZmVjdH0gZnJvbSAncmVhY3QnXG5pbXBvcnQge0J1dHRvbiwgRm9ybSwgSW5wdXQsIFJvdywgUmFkaW8sIENhcmQsIG1lc3NhZ2V9IGZyb20gJ2FudGQnXG5pbXBvcnQgSGVhZCBmcm9tICduZXh0L2hlYWQnXG5pbXBvcnQgTG9naW5CYWNrZ3JvdW5kIGZyb20gJy4uL3NyYy9jb21wb25lbnRzL0xvZ2luQmFja2dyb3VuZCdcbmltcG9ydCBGb3Jnb3RQYXNzd29yZENvbXBvbmVudCBmcm9tICcuLi9zcmMvYXJlYXMvTG9naW5DYXJkL0ZvcmdvdFBhc3N3b3JkQ29tcG9uZW50J1xuaW1wb3J0IHsgVXNlckNvbnRleHQgfSBmcm9tICcuLi9zcmMvbGliL1VzZXJDb250ZXh0J1xuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInXG5pbXBvcnQgT3BlblBhZ2UgZnJvbSAnLi4vc3JjL2FyZWFzL09wZW5QYWdlJ1xuXG5jb25zdCBWZXJpZmljYXRpb246IFJlYWN0LkZDID0gcHJvcHMgPT4ge1xuICAgIGNvbnN0IHthcGksIHNldFRva2VufSA9IHVzZUNvbnRleHQoVXNlckNvbnRleHQpXG4gICAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKClcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IHZlcmlmeUVtYWlsRmV0Y2ggPSBhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGJvZHkgPSBhd2FpdCBhcGkudmVyaWZ5RW1haWwoe2lkOiByb3V0ZXIucXVlcnkudG9rZW59KVxuICAgICAgICAgICAgICAgIHNldFRva2VuKGJvZHkuZGF0YSlcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIG1lc3NhZ2UuZXJyb3IoXCJUaGVyZSB3YXMgYSBwcm9ibGVtIHZlcmlmeWluZyB5b3VyIGFjY291bnQuIFBsZWFzZSBjb250YWZjdCB1cy5cIilcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIE9wZW5QYWdlKCcvZGFzaGJvYXJkJylcbiAgICAgICAgfVxuXG4gICAgICAgIHZlcmlmeUVtYWlsRmV0Y2goKVxuICAgIH0sIFtdKVxuICAgIHJldHVybiAoXG4gICAgICAgIDw+XG4gICAgICAgICAgICA8SGVhZD5cbiAgICAgICAgICAgICAgICA8dGl0bGU+TWFzdGVyU2VhdHMg4oCiIEVtYWlsIFZlcmlmaWNhdGlvbjwvdGl0bGU+XG4gICAgICAgICAgICA8L0hlYWQ+XG4gICAgICAgICAgICA8TG9naW5CYWNrZ3JvdW5kPlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgPC9Mb2dpbkJhY2tncm91bmQ+XG4gICAgICAgIDwvPlxuICAgICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBWZXJpZmljYXRpb247Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./pages/verification.tsx\n");

/***/ }),

/***/ "./src/areas/OpenPage.tsx":
/*!********************************!*\
  !*** ./src/areas/OpenPage.tsx ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/router */ \"next/router\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst OpenPage = (new_page, setLoading) => {\n  next_router__WEBPACK_IMPORTED_MODULE_0___default.a.push(new_page).then(() => {\n    /*if (setLoading !== null) {\n        setLoading(false)\n    }*/\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (OpenPage);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXJlYXMvT3BlblBhZ2UudHN4PzMyYWYiXSwibmFtZXMiOlsiT3BlblBhZ2UiLCJuZXdfcGFnZSIsInNldExvYWRpbmciLCJSb3V0ZXIiLCJwdXNoIiwidGhlbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7O0FBRUEsTUFBTUEsUUFBUSxHQUFHLENBQUNDLFFBQUQsRUFBbUJDLFVBQW5CLEtBQStEO0FBQzVFQyxvREFBTSxDQUFDQyxJQUFQLENBQVlILFFBQVosRUFBc0JJLElBQXRCLENBQTJCLE1BQU07QUFDN0I7OztBQUdILEdBSkQ7QUFLSCxDQU5EOztBQVFlTCx1RUFBZiIsImZpbGUiOiIuL3NyYy9hcmVhcy9PcGVuUGFnZS50c3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUm91dGVyIGZyb20gJ25leHQvcm91dGVyJ1xuXG5jb25zdCBPcGVuUGFnZSA9IChuZXdfcGFnZTogc3RyaW5nLCBzZXRMb2FkaW5nPzogKG5ld0xvYWQ6IGJvb2xlYW4pID0+IHZvaWQpID0+IHtcbiAgICBSb3V0ZXIucHVzaChuZXdfcGFnZSkudGhlbigoKSA9PiB7XG4gICAgICAgIC8qaWYgKHNldExvYWRpbmcgIT09IG51bGwpIHtcbiAgICAgICAgICAgIHNldExvYWRpbmcoZmFsc2UpXG4gICAgICAgIH0qL1xuICAgIH0pXG59XG5cbmV4cG9ydCBkZWZhdWx0IE9wZW5QYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/areas/OpenPage.tsx\n");

/***/ }),

/***/ "./src/components/LoginBackground.tsx":
/*!********************************************!*\
  !*** ./src/components/LoginBackground.tsx ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-components */ \"styled-components\");\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(styled_components__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst LoginFlowContainer = styled_components__WEBPACK_IMPORTED_MODULE_1___default.a.div.withConfig({\n  displayName: \"LoginBackground__LoginFlowContainer\",\n  componentId: \"sc-1rkbibm-0\"\n})([\"background-color:#fff;height:100vh;width:100%;display:flex;justify-content:center;align-items:center;\"]);\nconst AbsoluteMaize = styled_components__WEBPACK_IMPORTED_MODULE_1___default.a.div.withConfig({\n  displayName: \"LoginBackground__AbsoluteMaize\",\n  componentId: \"sc-1rkbibm-1\"\n})([\"height:50vh;position:absolute;top:0;left:0;right:0;background-color:#FFCB05;\"]);\n\nconst LoginBackground = props => {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(LoginFlowContainer, {\n    style: props.style\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(AbsoluteMaize, null), props.children);\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (LoginBackground);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Mb2dpbkJhY2tncm91bmQudHN4PzQ5MmIiXSwibmFtZXMiOlsiTG9naW5GbG93Q29udGFpbmVyIiwic3R5bGVkIiwiZGl2IiwiQWJzb2x1dGVNYWl6ZSIsIkxvZ2luQmFja2dyb3VuZCIsInByb3BzIiwic3R5bGUiLCJjaGlsZHJlbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFQSxNQUFNQSxrQkFBa0IsR0FBR0Msd0RBQU0sQ0FBQ0MsR0FBVjtBQUFBO0FBQUE7QUFBQSw2R0FBeEI7QUFTQSxNQUFNQyxhQUFhLEdBQUdGLHdEQUFNLENBQUNDLEdBQVY7QUFBQTtBQUFBO0FBQUEsb0ZBQW5COztBQVNBLE1BQU1FLGVBQTZFLEdBQUlDLEtBQUQsSUFBVztBQUM3RixzQkFDSSwyREFBQyxrQkFBRDtBQUFvQixTQUFLLEVBQUVBLEtBQUssQ0FBQ0M7QUFBakMsa0JBQ0ksMkRBQUMsYUFBRCxPQURKLEVBRUtELEtBQUssQ0FBQ0UsUUFGWCxDQURKO0FBTUgsQ0FQRDs7QUFTZUgsOEVBQWYiLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9Mb2dpbkJhY2tncm91bmQudHN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7Q1NTUHJvcGVydGllc30gZnJvbSAncmVhY3QnXG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJ1xuXG5jb25zdCBMb2dpbkZsb3dDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7IFxuICAgIGhlaWdodDogMTAwdmg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDsgXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbmBcblxuY29uc3QgQWJzb2x1dGVNYWl6ZSA9IHN0eWxlZC5kaXZgXG4gICAgaGVpZ2h0OiA1MHZoO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZDQjA1O1xuYFxuXG5jb25zdCBMb2dpbkJhY2tncm91bmQ6IFJlYWN0LkZDPHtjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlLCBzdHlsZT86IENTU1Byb3BlcnRpZXN9PiA9IChwcm9wcykgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxMb2dpbkZsb3dDb250YWluZXIgc3R5bGU9e3Byb3BzLnN0eWxlfT5cbiAgICAgICAgICAgIDxBYnNvbHV0ZU1haXplLz5cbiAgICAgICAgICAgIHtwcm9wcy5jaGlsZHJlbn1cbiAgICAgICAgPC9Mb2dpbkZsb3dDb250YWluZXI+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBMb2dpbkJhY2tncm91bmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/LoginBackground.tsx\n");

/***/ }),

/***/ "./src/lib/UserContext.tsx":
/*!*********************************!*\
  !*** ./src/lib/UserContext.tsx ***!
  \*********************************/
/*! exports provided: UserContext, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UserContext\", function() { return UserContext; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../api */ \"./api/index.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nconst UserContext = /*#__PURE__*/Object(react__WEBPACK_IMPORTED_MODULE_0__[\"createContext\"])({\n  currentUser: null,\n  setToken: null,\n  api: null\n});\n\nclass UserProvider extends react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"] {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"setToken\", async token => {\n      if (token === null) {\n        this.setState({\n          api: new _api__WEBPACK_IMPORTED_MODULE_1__[\"DefaultApi\"](),\n          currentToken: null,\n          currentUser: null\n        });\n        return;\n      }\n\n      try {\n        console.log(token);\n        const api = new _api__WEBPACK_IMPORTED_MODULE_1__[\"DefaultApi\"]({\n          accessToken: token\n        });\n        const body = await api.getUser();\n        this.setState({\n          api,\n          currentUser: body.data\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    });\n\n    _defineProperty(this, \"state\", {\n      currentUser: null,\n      setToken: this.setToken,\n      api: new _api__WEBPACK_IMPORTED_MODULE_1__[\"DefaultApi\"]()\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(UserContext.Provider, {\n      value: this.state\n    }, this.props.children);\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (UserProvider);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGliL1VzZXJDb250ZXh0LnRzeD9kNzg0Il0sIm5hbWVzIjpbIlVzZXJDb250ZXh0IiwiY3JlYXRlQ29udGV4dCIsImN1cnJlbnRVc2VyIiwic2V0VG9rZW4iLCJhcGkiLCJVc2VyUHJvdmlkZXIiLCJDb21wb25lbnQiLCJ0b2tlbiIsInNldFN0YXRlIiwiRGVmYXVsdEFwaSIsImN1cnJlbnRUb2tlbiIsImNvbnNvbGUiLCJsb2ciLCJhY2Nlc3NUb2tlbiIsImJvZHkiLCJnZXRVc2VyIiwiZGF0YSIsImVyciIsImVycm9yIiwicmVuZGVyIiwic3RhdGUiLCJwcm9wcyIsImNoaWxkcmVuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFJQTtBQVFPLE1BQU1BLFdBQVcsZ0JBQUdDLDJEQUFhLENBQXdCO0FBQzVEQyxhQUFXLEVBQUUsSUFEK0M7QUFFNURDLFVBQVEsRUFBRSxJQUZrRDtBQUc1REMsS0FBRyxFQUFFO0FBSHVELENBQXhCLENBQWpDOztBQUtQLE1BQU1DLFlBQU4sU0FBMkJDLCtDQUEzQixDQUFxQztBQUFBO0FBQUE7O0FBQUEsc0NBQ3RCLE1BQU9DLEtBQVAsSUFBZ0M7QUFDdkMsVUFBSUEsS0FBSyxLQUFLLElBQWQsRUFBb0I7QUFDaEIsYUFBS0MsUUFBTCxDQUFjO0FBQUNKLGFBQUcsRUFBRSxJQUFJSywrQ0FBSixFQUFOO0FBQXdCQyxzQkFBWSxFQUFFLElBQXRDO0FBQTRDUixxQkFBVyxFQUFFO0FBQXpELFNBQWQ7QUFDQTtBQUNIOztBQUNELFVBQUk7QUFDQVMsZUFBTyxDQUFDQyxHQUFSLENBQVlMLEtBQVo7QUFDQSxjQUFNSCxHQUFHLEdBQUcsSUFBSUssK0NBQUosQ0FBZTtBQUFDSSxxQkFBVyxFQUFFTjtBQUFkLFNBQWYsQ0FBWjtBQUNBLGNBQU1PLElBQUksR0FBRyxNQUFNVixHQUFHLENBQUNXLE9BQUosRUFBbkI7QUFDQSxhQUFLUCxRQUFMLENBQWM7QUFBQ0osYUFBRDtBQUFNRixxQkFBVyxFQUFFWSxJQUFJLENBQUNFO0FBQXhCLFNBQWQ7QUFDSCxPQUxELENBS0UsT0FBT0MsR0FBUCxFQUFZO0FBQ1ZOLGVBQU8sQ0FBQ08sS0FBUixDQUFjRCxHQUFkO0FBQ0g7QUFDSixLQWRnQzs7QUFBQSxtQ0FnQnpCO0FBQ0pmLGlCQUFXLEVBQUUsSUFEVDtBQUVKQyxjQUFRLEVBQUUsS0FBS0EsUUFGWDtBQUdKQyxTQUFHLEVBQUUsSUFBSUssK0NBQUo7QUFIRCxLQWhCeUI7QUFBQTs7QUFzQmpDVSxRQUFNLEdBQUc7QUFDTCx3QkFDQSwyREFBQyxXQUFELENBQWEsUUFBYjtBQUFzQixXQUFLLEVBQUUsS0FBS0M7QUFBbEMsT0FDSyxLQUFLQyxLQUFMLENBQVdDLFFBRGhCLENBREE7QUFLSDs7QUE1QmdDOztBQThCdEJqQiwyRUFBZiIsImZpbGUiOiIuL3NyYy9saWIvVXNlckNvbnRleHQudHN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCwgY3JlYXRlQ29udGV4dCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFJvdXRlciwge3dpdGhSb3V0ZXJ9IGZyb20gXCJuZXh0L3JvdXRlclwiO1xuaW1wb3J0IHttZXNzYWdlfSBmcm9tICdhbnRkJ1xuaW1wb3J0IHsgTmV4dFBhZ2UsIE5leHRQYWdlQ29udGV4dCB9IGZyb20gJ25leHQnO1xuaW1wb3J0IHtVc2VyLCBEZWZhdWx0QXBpfSBmcm9tICcuLi8uLi9hcGknXG5cbmludGVyZmFjZSBDb250ZXh0UHJvcHMge1xuICBjdXJyZW50VXNlcj86IFVzZXIsXG4gIGFwaT86IERlZmF1bHRBcGlcbiAgc2V0VG9rZW46ICh0b2tlbjogc3RyaW5nIHwgbnVsbCkgPT4gUHJvbWlzZTx2b2lkPlxufVxuXG5leHBvcnQgY29uc3QgVXNlckNvbnRleHQgPSBjcmVhdGVDb250ZXh0PFBhcnRpYWw8Q29udGV4dFByb3BzPj4oe1xuICAgIGN1cnJlbnRVc2VyOiBudWxsLFxuICAgIHNldFRva2VuOiBudWxsLFxuICAgIGFwaTogbnVsbFxufSk7XG5jbGFzcyBVc2VyUHJvdmlkZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIHNldFRva2VuID0gYXN5bmMgKHRva2VuOiBzdHJpbmcgfCBudWxsKSA9PiB7XG4gICAgICAgIGlmICh0b2tlbiA9PT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7YXBpOiBuZXcgRGVmYXVsdEFwaSgpLCBjdXJyZW50VG9rZW46IG51bGwsIGN1cnJlbnRVc2VyOiBudWxsfSlcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyh0b2tlbilcbiAgICAgICAgICAgIGNvbnN0IGFwaSA9IG5ldyBEZWZhdWx0QXBpKHthY2Nlc3NUb2tlbjogdG9rZW59KVxuICAgICAgICAgICAgY29uc3QgYm9keSA9IGF3YWl0IGFwaS5nZXRVc2VyKClcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe2FwaSwgY3VycmVudFVzZXI6IGJvZHkuZGF0YX0pXG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBzdGF0ZSA9IHtcbiAgICAgICAgY3VycmVudFVzZXI6IG51bGwsXG4gICAgICAgIHNldFRva2VuOiB0aGlzLnNldFRva2VuLFxuICAgICAgICBhcGk6IG5ldyBEZWZhdWx0QXBpKClcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgIDxVc2VyQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17dGhpcy5zdGF0ZX0+XG4gICAgICAgICAgICB7dGhpcy5wcm9wcy5jaGlsZHJlbn1cbiAgICAgICAgPC9Vc2VyQ29udGV4dC5Qcm92aWRlcj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBVc2VyUHJvdmlkZXI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/lib/UserContext.tsx\n");

/***/ }),

/***/ 3:
/*!**************************************!*\
  !*** multi ./pages/verification.tsx ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /Users/insanity/Documents/MasterSeats/new/client/pages/verification.tsx */"./pages/verification.tsx");


/***/ }),

/***/ "antd":
/*!***********************!*\
  !*** external "antd" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"antd\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJhbnRkXCI/MDhhYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiJhbnRkLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiYW50ZFwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///antd\n");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"axios\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJheGlvc1wiPzcwYzYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiYXhpb3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJheGlvc1wiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///axios\n");

/***/ }),

/***/ "next/head":
/*!****************************!*\
  !*** external "next/head" ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"next/head\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJuZXh0L2hlYWRcIj81ZWYyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Im5leHQvaGVhZC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIm5leHQvaGVhZFwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///next/head\n");

/***/ }),

/***/ "next/router":
/*!******************************!*\
  !*** external "next/router" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"next/router\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJuZXh0L3JvdXRlclwiP2Q4M2UiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoibmV4dC9yb3V0ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJuZXh0L3JvdXRlclwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///next/router\n");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"react\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZWFjdFwiPzU4OGUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoicmVhY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJyZWFjdFwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///react\n");

/***/ }),

/***/ "styled-components":
/*!************************************!*\
  !*** external "styled-components" ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"styled-components\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJzdHlsZWQtY29tcG9uZW50c1wiP2Y1YWQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoic3R5bGVkLWNvbXBvbmVudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJzdHlsZWQtY29tcG9uZW50c1wiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///styled-components\n");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"url\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJ1cmxcIj82MWU4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6InVybC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInVybFwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///url\n");

/***/ })

/******/ });